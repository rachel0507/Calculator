{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DC\\u05E0\\u05D5\\u05D1\\u05D5\\\\source\\\\repos\\\\app\\\\src\\\\components\\\\calculationList\\\\calculationList.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from \"react\";\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport axios from \"axios\";\nimport reducer from \"../../actions/calculatorReducer\";\nimport EnhancedTableHead from \"../tableHead/tableHead\";\nimport { deleteCalculationById } from \"../../actions/calculatorApiActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"https://localhost:44306\";\nconst {\n  forwardRef,\n  useImperativeHandle\n} = React;\nconst initialState = {\n  rows: [],\n  loading: false\n};\nconst CalculationList = forwardRef(_c = _s2((props, ref) => {\n  var _s = $RefreshSig$();\n\n  _s2();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => loadData());\n  const {\n    rows\n  } = state;\n  useImperativeHandle(ref, () => ({\n    updateRows(updatedRows) {\n      dispatch({\n        type: \"UPDATE_ROWS\",\n        payload: {\n          rows: updatedRows\n        }\n      });\n    }\n\n  }));\n\n  const loadData = () => {\n    const {\n      lastQuery,\n      loading\n    } = state;\n    const query = `${URL}/getCalculationList`;\n\n    if (query !== lastQuery && !loading) {\n      dispatch({\n        type: \"FETCH_INIT\"\n      });\n      axios.get(query).then(response => {\n        dispatch({\n          type: \"UPDATE_ROWS\",\n          payload: {\n            rows: response.data\n          }\n        });\n      }).catch(() => dispatch({\n        type: \"REQUEST_ERROR\"\n      }));\n      dispatch({\n        type: \"UPDATE_QUERY\",\n        payload: query\n      });\n    }\n  };\n\n  function stableSort(array) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    return stabilizedThis.map(el => el[0]);\n  } // interface EnhancedTableProps {\n  //   numSelected: number;\n  //   onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  //   rowCount: number;\n  // }\n  // const EnhancedTableHead = (props: EnhancedTableProps) => {\n  //   const { onSelectAllClick, numSelected, rowCount } = props;\n  //   return (\n  //     <TableHead>\n  //       <TableRow>\n  //         <TableCell padding=\"checkbox\">\n  //           <Checkbox\n  //             indeterminate={numSelected > 0 && numSelected < rowCount}\n  //             checked={rowCount > 0 && numSelected === rowCount}\n  //             onChange={onSelectAllClick}\n  //             inputProps={{ 'aria-label': 'select all desserts' }}\n  //           />\n  //         </TableCell>\n  //         <TableCell\n  //           align={'left'}\n  //           padding={'default'}\n  //           sortDirection={false}\n  //         >\n  //         </TableCell>\n  //         <TableCell\n  //           align={'left'}\n  //           padding={'default'}\n  //           sortDirection={false}\n  //         >\n  //         </TableCell>\n  //         <TableCell\n  //           align={'left'}\n  //           padding={'default'}\n  //           sortDirection={false}\n  //         >\n  //         </TableCell>\n  //       </TableRow>\n  //     </TableHead>\n  //   );\n  // }\n  // const useToolbarStyles = makeStyles((theme: Theme) =>\n  //   createStyles({\n  //     root: {\n  //       paddingLeft: theme.spacing(2),\n  //       paddingRight: theme.spacing(1),\n  //     },\n  //     highlight:\n  //       theme.palette.type === 'light'\n  //         ? {\n  //           color: theme.palette.secondary.main,\n  //           backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n  //         }\n  //         : {\n  //           color: theme.palette.text.primary,\n  //           backgroundColor: theme.palette.secondary.dark,\n  //         },\n  //     title: {\n  //       position: 'absolute',\n  //       left: '0',\n  //       width: '100%'\n  //     },\n  //     selectTitle: {\n  //       flex: '1 1 16%',\n  //       textAlign: 'left'\n  //     }\n  //   }),\n  // );\n  // interface EnhancedTableToolbarProps {\n  //   numSelected: number;\n  //   onDeleteClick: MouseEventHandler<unknown>;\n  // }\n  // const EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n  //   const classes = useToolbarStyles();\n  //   const { numSelected, onDeleteClick } = props;\n  //   return (\n  //     <Toolbar\n  //       className={clsx(classes.root, {\n  //         [classes.highlight]: numSelected > 0,\n  //       })}\n  //     >\n  //       <Typography className={classes.selectTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n  //         {(numSelected > 0 ? `${numSelected} selected` : '')}\n  //       </Typography>\n  //       <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n  //         Calculation History\n  //       </Typography>\n  //       <Tooltip title=\"Delete\" >\n  //         <div>\n  //           <IconButton disabled={numSelected === 0} onClick={onDeleteClick} aria-label=\"delete\" >\n  //             <DeleteIcon />\n  //           </IconButton>\n  //         </div>\n  //       </Tooltip>\n  //     </Toolbar>\n  //   );\n  // };\n\n\n  const useStyles = makeStyles(theme => createStyles({\n    root: {\n      width: '40%',\n      margin: 'auto'\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(3),\n      marginTop: theme.spacing(3)\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1\n    }\n  }));\n\n  const EnhancedTable = () => {\n    _s();\n\n    const classes = useStyles();\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleSelectAllClick = event => {\n      if (event.target.checked) {\n        const newSelecteds = rows.map(n => {\n          var _n$id;\n\n          return (_n$id = n.id) === null || _n$id === void 0 ? void 0 : _n$id.toString();\n        });\n        setSelected(newSelecteds);\n        return;\n      }\n\n      setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n      const selectedIndex = selected.indexOf(id.toString());\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      setSelected(newSelected);\n    };\n\n    const handleCalculationDelete = (event, ids) => {\n      deleteCalculationById(ids).then(updatedRows => {\n        setSelected([]);\n        dispatch({\n          type: \"UPDATE_ROWS\",\n          payload: {\n            rows: updatedRows\n          }\n        });\n      }).catch(() => dispatch({\n        type: \"REQUEST_ERROR\"\n      }));\n    };\n\n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    const getOperString = op => {\n      switch (op) {\n        case 1:\n          //add:\n          return '+';\n\n        case 2:\n          //sub:\n          return '-';\n\n        case 3:\n          //mul:\n          return '×';\n\n        case 4:\n          //div:\n          return '÷';\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n          numSelected: selected.length,\n          onDeleteClick: event => handleCalculationDelete(event, selected)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-labelledby\": \"tableTitle\",\n            size: \"medium\",\n            \"aria-label\": \"enhanced table\",\n            children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n              numSelected: selected.length,\n              onSelectAllClick: handleSelectAllClick,\n              rowCount: rows.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [stableSort(rows).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                var _id;\n\n                const isItemSelected = isSelected(((_id = row.id) === null || _id === void 0 ? void 0 : _id.toString()) || '');\n                const labelId = `enhanced-table-checkbox-${row.id}`;\n                const actionDeleteId = `enhanced-table-action-delete-${row.id}`;\n                const actionEditId = `enhanced-table-action-edit-${row.id}`;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  onClick: event => {\n                    var _id2;\n\n                    return handleClick(event, ((_id2 = row.id) === null || _id2 === void 0 ? void 0 : _id2.toString()) || '');\n                  },\n                  role: \"checkbox\",\n                  \"aria-checked\": isItemSelected,\n                  tabIndex: -1,\n                  selected: isItemSelected,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: isItemSelected,\n                      inputProps: {\n                        'aria-labelledby': labelId\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    id: labelId,\n                    scope: \"row\",\n                    padding: \"none\",\n                    children: [row.num1, \" \", getOperString(row.oper), \" \", row.num2, \" = \", row.result]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    id: actionDeleteId,\n                    scope: \"row\",\n                    padding: \"none\",\n                    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Delete\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: event => {\n                          var _id3;\n\n                          return handleCalculationDelete(event, [((_id3 = row.id) === null || _id3 === void 0 ? void 0 : _id3.toString()) || '']);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          \"aria-label\": \"delete\",\n                          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 343,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 342,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 341,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    id: actionEditId,\n                    scope: \"row\",\n                    padding: \"none\",\n                    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: \"Edit\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        onClick: event => props.handleCalculationEdit(event, row),\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          \"aria-label\": \"edit\",\n                          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 352,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 351,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 350,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 25\n                  }, this)]\n                }, row.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this);\n              }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                style: {\n                  height: 53 * emptyRows\n                },\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(EnhancedTable, \"uGGgYxaCjzsCM0dP1PcAuh8txKw=\", false, function () {\n    return [useStyles];\n  });\n\n  return /*#__PURE__*/_jsxDEV(EnhancedTable, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 11\n  }, this);\n}, \"WQHlb9G4ue9b7LmM03KWYT7hwyM=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = CalculationList;\nexport default CalculationList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CalculationList$forwardRef\");\n$RefreshReg$(_c2, \"CalculationList\");","map":{"version":3,"sources":["C:/Users/לנובו/source/repos/app/src/components/calculationList/calculationList.tsx"],"names":["React","useReducer","useEffect","createStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","EditIcon","axios","reducer","EnhancedTableHead","deleteCalculationById","URL","forwardRef","useImperativeHandle","initialState","rows","loading","CalculationList","props","ref","state","dispatch","loadData","updateRows","updatedRows","type","payload","lastQuery","query","get","then","response","data","catch","stableSort","array","stabilizedThis","map","el","index","useStyles","theme","root","width","margin","paper","marginBottom","spacing","marginTop","visuallyHidden","border","clip","height","overflow","padding","position","top","EnhancedTable","classes","selected","setSelected","useState","page","setPage","rowsPerPage","setRowsPerPage","handleSelectAllClick","event","target","checked","newSelecteds","n","id","toString","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleCalculationDelete","ids","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","min","getOperString","op","row","isItemSelected","labelId","actionDeleteId","actionEditId","num1","oper","num2","result","handleCalculationEdit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAAgE,OAAhE;AAEA,SAASC,YAAT,EAAgCC,UAAhC,QAAyD,0BAAzD;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAGA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AAEA,OAAOC,iBAAP,MAA8B,wBAA9B;AAGA,SACEC,qBADF,QAEO,oCAFP;;AAIA,MAAMC,GAAG,GAAG,yBAAZ;AAEA,MAAM;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,IAAsCvB,KAA5C;AAEA,MAAMwB,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AASA,MAAMC,eAAe,GAAGL,UAAU,UAAC,CAACM,KAAD,EAA8BC,GAA9B,KAAsC;AAAA;;AAAA;;AACvE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB9B,UAAU,CAACiB,OAAD,EAAUM,YAAV,CAApC;AAEAtB,EAAAA,SAAS,CAAC,MAAM8B,QAAQ,EAAf,CAAT;AACA,QAAM;AAAEP,IAAAA;AAAF,MAAWK,KAAjB;AAEAP,EAAAA,mBAAmB,CAACM,GAAD,EAAM,OAAO;AAC9BI,IAAAA,UAAU,CAACC,WAAD,EAA8B;AACtCH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,aADC;AAEPC,QAAAA,OAAO,EAAE;AACPX,UAAAA,IAAI,EAAES;AADC;AAFF,OAAD,CAAR;AAMD;;AAR6B,GAAP,CAAN,CAAnB;;AAWA,QAAMF,QAAQ,GAAG,MAAM;AACrB,UAAM;AAAEK,MAAAA,SAAF;AAAaX,MAAAA;AAAb,QAAyBI,KAA/B;AACA,UAAMQ,KAAK,GAAM,GAAEjB,GAAI,qBAAvB;;AACA,QAAIiB,KAAK,KAAKD,SAAV,IAAuB,CAACX,OAA5B,EAAqC;AACnCK,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACAlB,MAAAA,KAAK,CACFsB,GADH,CACOD,KADP,EAEGE,IAFH,CAESC,QAAD,IAAc;AAClBV,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAE,aADC;AAEPC,UAAAA,OAAO,EAAE;AACPX,YAAAA,IAAI,EAAEgB,QAAQ,CAACC;AADR;AAFF,SAAD,CAAR;AAMD,OATH,EAUGC,KAVH,CAUS,MAAMZ,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAD,CAVvB;AAWAJ,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,OAAO,EAAEE;AAAjC,OAAD,CAAR;AACD;AACF,GAlBD;;AAoBA,WAASM,UAAT,CAAkCC,KAAlC,EAAyD;AACvD,UAAMC,cAAc,GAAGD,KAAK,CAACE,GAAN,CAAU,CAACC,EAAD,EAAmBC,KAAnB,KAA6B,CAACD,EAAD,EAAKC,KAAL,CAAvC,CAAvB;AACA,WAAOH,cAAc,CAACC,GAAf,CAAoBC,EAAD,IAAQA,EAAE,CAAC,CAAD,CAA7B,CAAP;AACD,GAxCsE,CA0CvE;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAME,SAAS,GAAG9C,UAAU,CAAE+C,KAAD,IAC3BhD,YAAY,CAAC;AACXiD,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,KADH;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KADK;AAKXC,IAAAA,KAAK,EAAE;AACLF,MAAAA,KAAK,EAAE,MADF;AAELG,MAAAA,YAAY,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CAFT;AAGLC,MAAAA,SAAS,EAAEP,KAAK,CAACM,OAAN,CAAc,CAAd;AAHN,KALI;AAUXE,IAAAA,cAAc,EAAE;AACdC,MAAAA,MAAM,EAAE,CADM;AAEdC,MAAAA,IAAI,EAAE,eAFQ;AAGdC,MAAAA,MAAM,EAAE,CAHM;AAIdR,MAAAA,MAAM,EAAE,CAAC,CAJK;AAKdS,MAAAA,QAAQ,EAAE,QALI;AAMdC,MAAAA,OAAO,EAAE,CANK;AAOdC,MAAAA,QAAQ,EAAE,UAPI;AAQdC,MAAAA,GAAG,EAAE,EARS;AASdb,MAAAA,KAAK,EAAE;AATO;AAVL,GAAD,CADc,CAA5B;;AAyBA,QAAMc,aAAa,GAAG,MAAM;AAAA;;AAC1B,UAAMC,OAAO,GAAGlB,SAAS,EAAzB;AACA,UAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BtE,KAAK,CAACuE,QAAN,CAAyB,EAAzB,CAAhC;AACA,UAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBzE,KAAK,CAACuE,QAAN,CAAe,CAAf,CAAxB;AACA,UAAM,CAACG,WAAD,EAAcC,cAAd,IAAgC3E,KAAK,CAACuE,QAAN,CAAe,CAAf,CAAtC;;AAGA,UAAMK,oBAAoB,GAAIC,KAAD,IAAgD;AAC3E,UAAIA,KAAK,CAACC,MAAN,CAAaC,OAAjB,EAA0B;AACxB,cAAMC,YAAY,GAAGvD,IAAI,CAACsB,GAAL,CAAUkC,CAAD;AAAA;;AAAA,0BAAqBA,CAAC,CAACC,EAAvB,0CAAqB,MAAMC,QAAN,EAArB;AAAA,SAAT,CAArB;AACAb,QAAAA,WAAW,CAACU,YAAD,CAAX;AACA;AACD;;AACDV,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAPD;;AASA,UAAMc,WAAW,GAAG,CAACP,KAAD,EAAmCK,EAAnC,KAAkD;AACpE,YAAMG,aAAa,GAAGhB,QAAQ,CAACiB,OAAT,CAAiBJ,EAAE,CAACC,QAAH,EAAjB,CAAtB;AACA,UAAII,WAAqB,GAAG,EAA5B;;AAEA,UAAIF,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBE,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBnB,QAAnB,EAA6Ba,EAA7B,CAAd;AACD,OAFD,MAEO,IAAIG,aAAa,KAAK,CAAtB,EAAyB;AAC9BE,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBnB,QAAQ,CAACoB,KAAT,CAAe,CAAf,CAAnB,CAAd;AACD,OAFM,MAEA,IAAIJ,aAAa,KAAKhB,QAAQ,CAACqB,MAAT,GAAkB,CAAxC,EAA2C;AAChDH,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBnB,QAAQ,CAACoB,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAnB,CAAd;AACD,OAFM,MAEA,IAAIJ,aAAa,GAAG,CAApB,EAAuB;AAC5BE,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CACZnB,QAAQ,CAACoB,KAAT,CAAe,CAAf,EAAkBJ,aAAlB,CADY,EAEZhB,QAAQ,CAACoB,KAAT,CAAeJ,aAAa,GAAG,CAA/B,CAFY,CAAd;AAID;;AAEDf,MAAAA,WAAW,CAACiB,WAAD,CAAX;AACD,KAlBD;;AAoBA,UAAMI,uBAAuB,GAAG,CAACd,KAAD,EAAmCe,GAAnC,KAAqD;AACnFxE,MAAAA,qBAAqB,CAACwE,GAAD,CAArB,CACGpD,IADH,CACSN,WAAD,IAAiB;AACrBoC,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAvC,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAE,aADC;AAEPC,UAAAA,OAAO,EAAE;AACPX,YAAAA,IAAI,EAAES;AADC;AAFF,SAAD,CAAR;AAMD,OATH,EAUGS,KAVH,CAUS,MAAMZ,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAD,CAVvB;AAWD,KAZD;;AAcA,UAAM0D,gBAAgB,GAAG,CAAChB,KAAD,EAAiBiB,OAAjB,KAAqC;AAC5DrB,MAAAA,OAAO,CAACqB,OAAD,CAAP;AACD,KAFD;;AAIA,UAAMC,uBAAuB,GAAIlB,KAAD,IAAgD;AAC9EF,MAAAA,cAAc,CAACqB,QAAQ,CAACnB,KAAK,CAACC,MAAN,CAAamB,KAAd,EAAqB,EAArB,CAAT,CAAd;AACAxB,MAAAA,OAAO,CAAC,CAAD,CAAP;AACD,KAHD;;AAKA,UAAMyB,UAAU,GAAIhB,EAAD,IAAgBb,QAAQ,CAACiB,OAAT,CAAiBJ,EAAjB,MAAyB,CAAC,CAA7D;;AAEA,UAAMiB,SAAS,GAAGzB,WAAW,GAAG0B,IAAI,CAACC,GAAL,CAAS3B,WAAT,EAAsBjD,IAAI,CAACiE,MAAL,GAAclB,IAAI,GAAGE,WAA3C,CAAhC;;AACA,UAAM4B,aAAa,GAAIC,EAAD,IAAc;AAClC,cAAQA,EAAR;AACE,aAAK,CAAL;AAAO;AACL,iBAAO,GAAP;;AACF,aAAK,CAAL;AAAO;AACL,iBAAO,GAAP;;AACF,aAAK,CAAL;AAAO;AACL,iBAAO,GAAP;;AACF,aAAK,CAAL;AAAO;AACL,iBAAO,GAAP;AARJ;AAUD,KAXD;;AAYA,wBACE;AAAK,MAAA,SAAS,EAAEnC,OAAO,CAAChB,IAAxB;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEgB,OAAO,CAACb,KAA1B;AAAA,gCACE,QAAC,oBAAD;AACE,UAAA,WAAW,EAAEc,QAAQ,CAACqB,MADxB;AAEE,UAAA,aAAa,EAAGb,KAAD,IAAWc,uBAAuB,CAACd,KAAD,EAAQR,QAAR;AAFnD;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,cAAD;AAAA,iCACE,QAAC,KAAD;AACE,+BAAgB,YADlB;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,0BAAW,gBAHb;AAAA,oCAKE,QAAC,iBAAD;AACE,cAAA,WAAW,EAAEA,QAAQ,CAACqB,MADxB;AAEE,cAAA,gBAAgB,EAAEd,oBAFpB;AAGE,cAAA,QAAQ,EAAEnD,IAAI,CAACiE;AAHjB;AAAA;AAAA;AAAA;AAAA,oBALF,eAUE,QAAC,SAAD;AAAA,yBACG9C,UAAU,CAACnB,IAAD,CAAV,CACEgE,KADF,CACQjB,IAAI,GAAGE,WADf,EAC4BF,IAAI,GAAGE,WAAP,GAAqBA,WADjD,EAEE3B,GAFF,CAEM,CAACyD,GAAD,EAAMvD,KAAN,KAAgB;AAAA;;AACnB,sBAAMwD,cAAc,GAAGP,UAAU,CAAC,QAACM,GAAD,CAAatB,EAAb,4CAAiBC,QAAjB,OAA+B,EAAhC,CAAjC;AACA,sBAAMuB,OAAO,GAAI,2BAA2BF,GAAD,CAAatB,EAAG,EAA3D;AACA,sBAAMyB,cAAc,GAAI,gCAAgCH,GAAD,CAAatB,EAAG,EAAvE;AACA,sBAAM0B,YAAY,GAAI,8BAA8BJ,GAAD,CAAatB,EAAG,EAAnE;AACA,oCACE,QAAC,QAAD;AACE,kBAAA,KAAK,MADP;AAEE,kBAAA,OAAO,EAAGL,KAAD;AAAA;;AAAA,2BAAWO,WAAW,CAACP,KAAD,EAAQ,SAAC2B,GAAD,CAAatB,EAAb,8CAAiBC,QAAjB,OAA+B,EAAvC,CAAtB;AAAA,mBAFX;AAGE,kBAAA,IAAI,EAAC,UAHP;AAIE,kCAAcsB,cAJhB;AAKE,kBAAA,QAAQ,EAAE,CAAC,CALb;AAOE,kBAAA,QAAQ,EAAEA,cAPZ;AAAA,0CASE,QAAC,SAAD;AAAW,oBAAA,OAAO,EAAC,UAAnB;AAAA,2CACE,QAAC,QAAD;AACE,sBAAA,OAAO,EAAEA,cADX;AAEE,sBAAA,UAAU,EAAE;AAAE,2CAAmBC;AAArB;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BATF,eAeE,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,IAArB;AAA0B,oBAAA,EAAE,EAAEA,OAA9B;AAAuC,oBAAA,KAAK,EAAC,KAA7C;AAAmD,oBAAA,OAAO,EAAC,MAA3D;AAAA,+BACIF,GAAD,CAAaK,IADhB,OACuBP,aAAa,CAAEE,GAAD,CAAaM,IAAd,CADpC,OAC2DN,GAAD,CAAaO,IADvE,SACiFP,GAAD,CAAaQ,MAD7F;AAAA;AAAA;AAAA;AAAA;AAAA,0BAfF,eAkBE,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,IAArB;AAA0B,oBAAA,EAAE,EAAEL,cAA9B;AAA8C,oBAAA,KAAK,EAAC,KAApD;AAA0D,oBAAA,OAAO,EAAC,MAAlE;AAAA,2CACE,QAAC,OAAD;AAAS,sBAAA,KAAK,EAAC,QAAf;AAAA,6CACE;AAAK,wBAAA,OAAO,EAAG9B,KAAD;AAAA;;AAAA,iCAAWc,uBAAuB,CAACd,KAAD,EAAQ,CAAC,SAAC2B,GAAD,CAAatB,EAAb,8CAAiBC,QAAjB,OAA+B,EAAhC,CAAR,CAAlC;AAAA,yBAAd;AAAA,+CACE,QAAC,UAAD;AAAY,wCAAW,QAAvB;AAAA,iDACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAlBF,eA2BE,QAAC,SAAD;AAAW,oBAAA,SAAS,EAAC,IAArB;AAA0B,oBAAA,EAAE,EAAEyB,YAA9B;AAA4C,oBAAA,KAAK,EAAC,KAAlD;AAAwD,oBAAA,OAAO,EAAC,MAAhE;AAAA,2CACE,QAAC,OAAD;AAAS,sBAAA,KAAK,EAAC,MAAf;AAAA,6CACE;AAAK,wBAAA,OAAO,EAAG/B,KAAD,IAAWjD,KAAK,CAACqF,qBAAN,CAA4BpC,KAA5B,EAAmC2B,GAAnC,CAAzB;AAAA,+CACE,QAAC,UAAD;AAAY,wCAAW,MAAvB;AAAA,iDACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BA3BF;AAAA,mBAMQA,GAAD,CAAatB,EANpB;AAAA;AAAA;AAAA;AAAA,wBADF;AAuCD,eA9CF,CADH,EAgDGiB,SAAS,GAAG,CAAZ,iBACC,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAE;AAAErC,kBAAAA,MAAM,EAAE,KAAKqC;AAAf,iBAAjB;AAAA,uCACE,QAAC,SAAD;AAAW,kBAAA,OAAO,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAwEE,QAAC,eAAD;AACE,UAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CADtB;AAEE,UAAA,SAAS,EAAC,KAFZ;AAGE,UAAA,KAAK,EAAE1E,IAAI,CAACiE,MAHd;AAIE,UAAA,WAAW,EAAEhB,WAJf;AAKE,UAAA,IAAI,EAAEF,IALR;AAME,UAAA,YAAY,EAAEqB,gBANhB;AAOE,UAAA,mBAAmB,EAAEE;AAPvB;AAAA;AAAA;AAAA;AAAA,gBAxEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAsFD,GAhKD;;AAjLuE,KAiLjE5B,aAjLiE;AAAA,YAkLrDjB,SAlLqD;AAAA;;AAmVvE,sBAAQ,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,UAAR;AACD,CApViC;AAAA,UAMhC3B,mBANgC;AAAA,GAAlC;MAAMI,e;AAsVN,eAAeA,eAAf","sourcesContent":["import React, { useReducer, useEffect, MouseEventHandler } from \"react\";\r\nimport clsx from 'clsx';\r\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport axios from \"axios\";\r\nimport reducer from \"../../actions/calculatorReducer\";\r\n\r\nimport EnhancedTableHead from \"../tableHead/tableHead\";\r\nimport EnhancedTableToolBar from \"../tableToolbar/tableToolbar\";\r\n\r\nimport {\r\n  deleteCalculationById,\r\n} from \"../../actions/calculatorApiActions\";\r\n\r\nconst URL = \"https://localhost:44306\";\r\n\r\nconst { forwardRef, useImperativeHandle } = React;\r\n\r\nconst initialState = {\r\n  rows: [],\r\n  loading: false\r\n};\r\n\r\ninterface CalculationListProps {\r\n  handleCalculationEdit: (event: React.MouseEvent<unknown>, row: ICalculation) => void\r\n}\r\n\r\nconst CalculationList = forwardRef((props: CalculationListProps, ref) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => loadData());\r\n  const { rows } = state;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    updateRows(updatedRows: ICalculation[]) {\r\n      dispatch({\r\n        type: \"UPDATE_ROWS\",\r\n        payload: {\r\n          rows: updatedRows\r\n        },\r\n      });\r\n    }\r\n  }));\r\n\r\n  const loadData = () => {\r\n    const { lastQuery, loading } = state;\r\n    const query =   `${URL}/getCalculationList`;\r\n    if (query !== lastQuery && !loading) {\r\n      dispatch({ type: \"FETCH_INIT\" });\r\n      axios\r\n        .get(query)\r\n        .then((response) => {\r\n          dispatch({\r\n            type: \"UPDATE_ROWS\",\r\n            payload: {\r\n              rows: response.data,\r\n            },\r\n          });\r\n        })\r\n        .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n      dispatch({ type: \"UPDATE_QUERY\", payload: query });\r\n    }\r\n  }\r\n\r\n  function stableSort<ICalculation>(array: ICalculation[]) {\r\n    const stabilizedThis = array.map((el: ICalculation, index) => [el, index] as [ICalculation, number]);\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n\r\n  // interface EnhancedTableProps {\r\n  //   numSelected: number;\r\n  //   onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  //   rowCount: number;\r\n  // }\r\n\r\n  // const EnhancedTableHead = (props: EnhancedTableProps) => {\r\n  //   const { onSelectAllClick, numSelected, rowCount } = props;\r\n\r\n  //   return (\r\n  //     <TableHead>\r\n  //       <TableRow>\r\n  //         <TableCell padding=\"checkbox\">\r\n  //           <Checkbox\r\n  //             indeterminate={numSelected > 0 && numSelected < rowCount}\r\n  //             checked={rowCount > 0 && numSelected === rowCount}\r\n  //             onChange={onSelectAllClick}\r\n  //             inputProps={{ 'aria-label': 'select all desserts' }}\r\n  //           />\r\n  //         </TableCell>\r\n\r\n  //         <TableCell\r\n  //           align={'left'}\r\n  //           padding={'default'}\r\n  //           sortDirection={false}\r\n  //         >\r\n  //         </TableCell>\r\n\r\n  //         <TableCell\r\n  //           align={'left'}\r\n  //           padding={'default'}\r\n  //           sortDirection={false}\r\n  //         >\r\n  //         </TableCell>\r\n\r\n  //         <TableCell\r\n  //           align={'left'}\r\n  //           padding={'default'}\r\n  //           sortDirection={false}\r\n  //         >\r\n  //         </TableCell>\r\n\r\n  //       </TableRow>\r\n  //     </TableHead>\r\n  //   );\r\n  // }\r\n\r\n  // const useToolbarStyles = makeStyles((theme: Theme) =>\r\n  //   createStyles({\r\n  //     root: {\r\n  //       paddingLeft: theme.spacing(2),\r\n  //       paddingRight: theme.spacing(1),\r\n  //     },\r\n  //     highlight:\r\n  //       theme.palette.type === 'light'\r\n  //         ? {\r\n  //           color: theme.palette.secondary.main,\r\n  //           backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n  //         }\r\n  //         : {\r\n  //           color: theme.palette.text.primary,\r\n  //           backgroundColor: theme.palette.secondary.dark,\r\n  //         },\r\n  //     title: {\r\n  //       position: 'absolute',\r\n  //       left: '0',\r\n  //       width: '100%'\r\n  //     },\r\n  //     selectTitle: {\r\n  //       flex: '1 1 16%',\r\n  //       textAlign: 'left'\r\n  //     }\r\n  //   }),\r\n  // );\r\n\r\n  // interface EnhancedTableToolbarProps {\r\n  //   numSelected: number;\r\n  //   onDeleteClick: MouseEventHandler<unknown>;\r\n  // }\r\n\r\n  // const EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n  //   const classes = useToolbarStyles();\r\n  //   const { numSelected, onDeleteClick } = props;\r\n\r\n  //   return (\r\n  //     <Toolbar\r\n  //       className={clsx(classes.root, {\r\n  //         [classes.highlight]: numSelected > 0,\r\n  //       })}\r\n  //     >\r\n  //       <Typography className={classes.selectTitle} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n  //         {(numSelected > 0 ? `${numSelected} selected` : '')}\r\n  //       </Typography>\r\n\r\n  //       <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n  //         Calculation History\r\n  //       </Typography>\r\n\r\n\r\n  //       <Tooltip title=\"Delete\" >\r\n  //         <div>\r\n  //           <IconButton disabled={numSelected === 0} onClick={onDeleteClick} aria-label=\"delete\" >\r\n  //             <DeleteIcon />\r\n  //           </IconButton>\r\n  //         </div>\r\n  //       </Tooltip>\r\n  //     </Toolbar>\r\n  //   );\r\n  // };\r\n\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        width: '40%',\r\n        margin: 'auto'\r\n      },\r\n      paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(3),\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n      },\r\n    }),\r\n  );\r\n\r\n  const EnhancedTable = () => {\r\n    const classes = useStyles();\r\n    const [selected, setSelected] = React.useState<string[]>([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n\r\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (event.target.checked) {\r\n        const newSelecteds = rows.map((n: ICalculation) => n.id?.toString());\r\n        setSelected(newSelecteds);\r\n        return;\r\n      }\r\n      setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<unknown>, id: string) => {\r\n      const selectedIndex = selected.indexOf(id.toString());\r\n      let newSelected: string[] = [];\r\n\r\n      if (selectedIndex === -1) {\r\n        newSelected = newSelected.concat(selected, id);\r\n      } else if (selectedIndex === 0) {\r\n        newSelected = newSelected.concat(selected.slice(1));\r\n      } else if (selectedIndex === selected.length - 1) {\r\n        newSelected = newSelected.concat(selected.slice(0, -1));\r\n      } else if (selectedIndex > 0) {\r\n        newSelected = newSelected.concat(\r\n          selected.slice(0, selectedIndex),\r\n          selected.slice(selectedIndex + 1),\r\n        );\r\n      }\r\n\r\n      setSelected(newSelected);\r\n    };\r\n\r\n    const handleCalculationDelete = (event: React.MouseEvent<unknown>, ids: string[]) => {\r\n      deleteCalculationById(ids)\r\n        .then((updatedRows) => {\r\n          setSelected([]);\r\n          dispatch({\r\n            type: \"UPDATE_ROWS\",\r\n            payload: {\r\n              rows: updatedRows,\r\n            },\r\n          });\r\n        })\r\n        .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n    };\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n      setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n\r\n    const isSelected = (id: string) => selected.indexOf(id) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    const getOperString = (op: oper) => {\r\n      switch (op) {\r\n        case 1://add:\r\n          return '+';\r\n        case 2://sub:\r\n          return '-';\r\n        case 3://mul:\r\n          return '×';\r\n        case 4://div:\r\n          return '÷';\r\n      }\r\n    }\r\n    return (\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <EnhancedTableToolbar\r\n            numSelected={selected.length}\r\n            onDeleteClick={(event) => handleCalculationDelete(event, selected)}\r\n          />\r\n          <TableContainer>\r\n            <Table\r\n              aria-labelledby=\"tableTitle\"\r\n              size=\"medium\"\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                numSelected={selected.length}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(rows)\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected((row as any).id?.toString() || '');\r\n                    const labelId = `enhanced-table-checkbox-${(row as any).id}`;\r\n                    const actionDeleteId = `enhanced-table-action-delete-${(row as any).id}`;\r\n                    const actionEditId = `enhanced-table-action-edit-${(row as any).id}`;\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, (row as any).id?.toString() || '')}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={(row as any).id}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            checked={isItemSelected}\r\n                            inputProps={{ 'aria-labelledby': labelId }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                          {(row as any).num1} {getOperString((row as any).oper)} {(row as any).num2} = {(row as any).result}\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" id={actionDeleteId} scope=\"row\" padding=\"none\">\r\n                          <Tooltip title=\"Delete\" >\r\n                            <div onClick={(event) => handleCalculationDelete(event, [(row as any).id?.toString() || ''])}>\r\n                              <IconButton aria-label=\"delete\" >\r\n                                <DeleteIcon />\r\n                              </IconButton>\r\n                            </div>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" id={actionEditId} scope=\"row\" padding=\"none\">\r\n                          <Tooltip title=\"Edit\" >\r\n                            <div onClick={(event) => props.handleCalculationEdit(event, row as ICalculation)}>\r\n                              <IconButton aria-label=\"edit\" >\r\n                                <EditIcon />\r\n                              </IconButton>\r\n                            </div>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: 53 * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (<EnhancedTable></EnhancedTable>);\r\n})\r\n\r\nexport default CalculationList;"]},"metadata":{},"sourceType":"module"}