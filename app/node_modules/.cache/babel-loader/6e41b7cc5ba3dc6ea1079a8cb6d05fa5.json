{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DC\\u05E0\\u05D5\\u05D1\\u05D5\\\\source\\\\repos\\\\CalculatorApp\\\\app\\\\src\\\\components\\\\promotionTable\\\\promotionTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer, useEffect } from \"react\";\nimport { DataTypeProvider } from \"@devexpress/dx-react-grid\";\nimport axios from \"axios\";\nimport reducer from \"../../actions/promotionReducer\";\nimport { columnExtensions, promotionsTableColumns } from \"../../common/columnSchema\";\nimport { MenuItem, Select } from \"@material-ui/core\";\nimport { // addCalculation,\ndeleteCalculationById, updateCalculation, getCalculationById } from \"../../actions/promotionApiActions\"; //import * as _ from \"lodash\";\n\nimport \"./promotionTable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VIRTUAL_PAGE_SIZE = 200;\nconst MAX_ROWS = 10000;\nconst URL = \"https://localhost:44306\";\n\nconst getRowId = row => row._id;\n\nconst buildQueryString = (skip, take) => `${URL}/GetCalcList`;\n\nconst initialState = {\n  rows: [],\n  skip: 0,\n  requestedSkip: 0,\n  take: VIRTUAL_PAGE_SIZE * 2,\n  totalCount: 0,\n  loading: false,\n  lastQuery: \"\"\n};\n\nconst DateFormatter = ({\n  value\n}) => value.split(\"T\")[0];\n\n_c = DateFormatter;\n\nconst DateTypeProvider = props => /*#__PURE__*/_jsxDEV(DataTypeProvider, {\n  formatterComponent: DateFormatter,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 3\n}, this);\n\n_c2 = DateTypeProvider;\nexport default function PromotionTable() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const columns = promotionsTableColumns;\n  const [tableColumnExtensions] = useState(columnExtensions);\n  const [selection, setSelection] = useState([]);\n  const [dateColumns] = useState([\"promotionStartDate\", \"promotionEndDate\"]);\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [editPromotion, setEditCalculation] = useState();\n\n  const getRemoteRows = (requestedSkip, take) => {\n    dispatch({\n      type: \"START_LOADING\",\n      payload: {\n        requestedSkip,\n        take\n      }\n    });\n  };\n\n  const handleCloseEditModal = () => {\n    setOpenEditModal(false);\n    setEditCalculation(null);\n    setSelection([]);\n  };\n\n  const handleCalculationEdit = calculationId => {\n    getCalculationById(calculationId).then(response => {\n      let editCalculation = response.data.calculation;\n      setEditCalculation(editCalculation);\n      setOpenEditModal(true);\n    });\n  };\n\n  const handleUpdatePromotion = updateCalc => {\n    updateCalculation(updateCalc).then(response => {\n      let updatedRows = rows.map(row => row.id === updateCalc.id ? updateCalc : row);\n      dispatch({\n        type: \"UPDATE_ROWS\",\n        payload: {\n          rows: updatedRows\n        }\n      });\n      setSelection([]);\n      setOpenEditModal(false);\n      setEditCalculation(null);\n    });\n  };\n\n  const handleCalculationDelete = calculationId => {\n    deleteCalculationById(calculationId).then(() => {\n      setSelection([]);\n      const updatedRows = rows.filter(function (row) {\n        return row._id !== calculationId;\n      });\n      dispatch({\n        type: \"UPDATE_ROWS\",\n        payload: {\n          rows: updatedRows\n        }\n      });\n    }).catch(() => dispatch({\n      type: \"REQUEST_ERROR\"\n    }));\n  }; // const handlePromotionDuplicate = (promotionId: string) => {\n  //   let duplicatePromotion = _.find(rows, { _id: promotionId });\n  //   addCalc(duplicatePromotion)\n  //     .then((response) => {\n  //       setSelection([]);\n  //       const newPromotion = response.data.promotion;\n  //       const updatedRows = [...rows];\n  //       updatedRows.unshift(newPromotion);\n  //       dispatch({\n  //         type: \"UPDATE_ROWS\",\n  //         payload: {\n  //           rows: updatedRows,\n  //         },\n  //       });\n  //     }) \n  //     .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\n  // };\n\n\n  const SelectActionType = () => /*#__PURE__*/_jsxDEV(Select, {\n    style: {\n      width: \"100%\"\n    },\n    disabled: selection.length !== 1,\n    defaultValue: \"\",\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"edit\",\n      onClick: () => handleCalculationEdit(selection[0]),\n      children: \"Edit\"\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: \"delete\",\n      onClick: () => handleCalculationDelete(selection[0]),\n      children: \"Delete\"\n    }, 2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n\n  const SelectTypeProvider = props => {\n    return /*#__PURE__*/_jsxDEV(DataTypeProvider, {\n      disabled: selection.length !== 1,\n      formatterComponent: SelectActionType,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  };\n\n  const loadData = () => {\n    const {\n      requestedSkip,\n      take,\n      lastQuery,\n      loading\n    } = state;\n    const query = buildQueryString(requestedSkip, take);\n\n    if (query !== lastQuery && !loading) {\n      dispatch({\n        type: \"FETCH_INIT\"\n      });\n      axios.get(query).then(response => {\n        dispatch({\n          type: \"UPDATE_ROWS\",\n          payload: {\n            skip: requestedSkip,\n            rows: response,\n            //.data.calcList,\n            totalCount: MAX_ROWS\n          }\n        });\n      }).catch(() => dispatch({\n        type: \"REQUEST_ERROR\"\n      }));\n      dispatch({\n        type: \"UPDATE_QUERY\",\n        payload: query\n      });\n    }\n  };\n\n  useEffect(() => loadData());\n  const {\n    rows,\n    skip,\n    totalCount,\n    loading\n  } = state;\n  return (\n    /*#__PURE__*/\n    // <Paper className=\"promotionTable\">\n    //   <h1>Our Promotions</h1>\n    //   <Grid rows={rows} columns={columns} getRowId={getRowId}>\n    //     <SelectionState\n    //       selection={selection}\n    //       onSelectionChange={setSelection}\n    //     />\n    //     <SelectTypeProvider\n    //       for={[\"Action\"]}\n    //       rowComponent\n    //       row={RowDetailState}\n    //     />\n    //     <DateTypeProvider for={dateColumns} />\n    //     <VirtualTableState\n    //       infiniteScrolling\n    //       loading={loading}\n    //       totalRowCount={totalCount}\n    //       pageSize={VIRTUAL_PAGE_SIZE}\n    //       skip={skip}\n    //       getRows={getRemoteRows}\n    //     />\n    //     <VirtualTable columnExtensions={tableColumnExtensions} />\n    //     <TableSelection highlightRow={true} />\n    //     <TableHeaderRow />\n    //     {editPromotion && (\n    //       <PromotionEditModal\n    //         calculation={editPromotion}\n    //         handleCloseEditModal={handleCloseEditModal}\n    //         open={openEditModal}\n    //         handleUpdateCalculation={handleUpdatePromotion}\n    //       />\n    //     )}\n    //   </Grid>\n    // </Paper>\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(PromotionTable, \"wnSQJvDKIxVXR33WbjuG7P1VGIo=\");\n\n_c3 = PromotionTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DateFormatter\");\n$RefreshReg$(_c2, \"DateTypeProvider\");\n$RefreshReg$(_c3, \"PromotionTable\");","map":{"version":3,"sources":["C:/Users/לנובו/source/repos/CalculatorApp/app/src/components/promotionTable/promotionTable.tsx"],"names":["React","useState","useReducer","useEffect","DataTypeProvider","axios","reducer","columnExtensions","promotionsTableColumns","MenuItem","Select","deleteCalculationById","updateCalculation","getCalculationById","VIRTUAL_PAGE_SIZE","MAX_ROWS","URL","getRowId","row","_id","buildQueryString","skip","take","initialState","rows","requestedSkip","totalCount","loading","lastQuery","DateFormatter","value","split","DateTypeProvider","props","PromotionTable","state","dispatch","columns","tableColumnExtensions","selection","setSelection","dateColumns","openEditModal","setOpenEditModal","editPromotion","setEditCalculation","getRemoteRows","type","payload","handleCloseEditModal","handleCalculationEdit","calculationId","then","response","editCalculation","data","calculation","handleUpdatePromotion","updateCalc","updatedRows","map","id","handleCalculationDelete","filter","catch","SelectActionType","width","length","SelectTypeProvider","loadData","query","get"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  Column,\n  DataTypeProvider,\n  RowDetailState,\n  SelectionState,\n  VirtualTableState,\n} from \"@devexpress/dx-react-grid\";\nimport {\n  Grid,\n  VirtualTable,\n  TableHeaderRow,\n  TableSelection,\n} from \"@devexpress/dx-react-grid-material-ui\";\nimport axios from \"axios\";\nimport reducer from \"../../actions/promotionReducer\";\nimport {\n  columnExtensions,\n  promotionsTableColumns,\n} from \"../../common/columnSchema\";\nimport { MenuItem, Select } from \"@material-ui/core\";\nimport {\n // addCalculation,\n  deleteCalculationById,\n  updateCalculation,\n  getCalculationById,\n} from \"../../actions/promotionApiActions\";\n//import * as _ from \"lodash\";\nimport PromotionEditModal from \"../promotionEditModal/promotionEditModal\";\nimport \"./promotionTable.css\";\n\nconst VIRTUAL_PAGE_SIZE = 200;\nconst MAX_ROWS = 10000;\nconst URL = \"https://localhost:44306\"; \n\nconst getRowId = (row: any) => row._id;\nconst buildQueryString = (skip: any, take: any) =>\n  `${URL}/GetCalcList`;\n\nconst initialState = {\n  rows: [],\n  skip: 0,\n  requestedSkip: 0,\n  take: VIRTUAL_PAGE_SIZE * 2,\n  totalCount: 0,\n  loading: false,\n  lastQuery: \"\",\n};\n\nconst DateFormatter = ({ value }: { value: any }) => value.split(\"T\")[0];\n\nconst DateTypeProvider = (props: any) => (\n  <DataTypeProvider formatterComponent={DateFormatter} {...props} />\n);\n\nexport default function PromotionTable() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const columns: Column[] = promotionsTableColumns;\n  const [tableColumnExtensions] = useState(columnExtensions);\n  const [selection, setSelection] = useState<any | null>([]);\n  const [dateColumns] = useState([\"promotionStartDate\", \"promotionEndDate\"]);\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [editPromotion, setEditCalculation] = useState<any | null>();\n\n  const getRemoteRows = (requestedSkip: number, take: number) => {\n    dispatch({ type: \"START_LOADING\", payload: { requestedSkip, take } });\n  };\n\n  const handleCloseEditModal = () => {\n    setOpenEditModal(false);\n    setEditCalculation(null);\n    setSelection([]);\n  };\n\n  const handleCalculationEdit = (calculationId: string) => {\n    getCalculationById(calculationId).then((response) => {\n      let editCalculation: ICalculation | undefined = response.data.calculation;\n      setEditCalculation(editCalculation);\n      setOpenEditModal(true);\n    });\n  };\n\n  const handleUpdatePromotion = (updateCalc: ICalculation) => {\n    updateCalculation(updateCalc).then((response) => {\n      let updatedRows = rows.map((row: any) =>\n        row.id === updateCalc.id ? updateCalc : row\n      );\n      dispatch({\n        type: \"UPDATE_ROWS\",\n        payload: {\n          rows: updatedRows,\n        },\n      });\n      setSelection([]);\n      setOpenEditModal(false);\n      setEditCalculation(null);\n    });\n  };\n\n  const handleCalculationDelete = (calculationId: string) => {\n    deleteCalculationById(calculationId)\n      .then(() => {\n        setSelection([]);\n        const updatedRows = rows.filter(function (row: any) {\n          return row._id !== calculationId;\n        });\n        dispatch({\n          type: \"UPDATE_ROWS\",\n          payload: {\n            rows: updatedRows,\n          },\n        });\n      })\n      .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\n  };\n\n  // const handlePromotionDuplicate = (promotionId: string) => {\n  //   let duplicatePromotion = _.find(rows, { _id: promotionId });\n  //   addCalc(duplicatePromotion)\n  //     .then((response) => {\n  //       setSelection([]);\n  //       const newPromotion = response.data.promotion;\n  //       const updatedRows = [...rows];\n  //       updatedRows.unshift(newPromotion);\n  //       dispatch({\n  //         type: \"UPDATE_ROWS\",\n  //         payload: {\n  //           rows: updatedRows,\n  //         },\n  //       });\n  //     }) \n  //     .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\n  // };\n\n  const SelectActionType = () => (\n    <Select\n      style={{ width: \"100%\" }}\n      disabled={selection.length !== 1}\n      defaultValue=\"\"\n    >\n      <MenuItem\n        value=\"edit\"\n        key={1}\n        onClick={() => handleCalculationEdit(selection[0])}\n      >\n        Edit\n      </MenuItem>\n      <MenuItem\n        value=\"delete\"\n        key={2}\n        onClick={() => handleCalculationDelete(selection[0])}\n      >\n        Delete\n      </MenuItem>\n      {/* <MenuItem\n        key={3}\n        value=\"duplicate\"\n        onClick={() => handlePromotionDuplicate(selection[0])}\n      >\n        Duplicate\n      </MenuItem> */}\n    </Select>\n  );\n\n  const SelectTypeProvider = (props: any) => {\n    return (\n      <DataTypeProvider\n        disabled={selection.length !== 1}\n        formatterComponent={SelectActionType}\n        {...props}\n      />\n    );\n  };\n\n  const loadData = () => {\n    const { requestedSkip, take, lastQuery, loading } = state;\n    const query = buildQueryString(requestedSkip, take);\n    if (query !== lastQuery && !loading) {\n      dispatch({ type: \"FETCH_INIT\" });\n      axios\n        .get(query)\n        .then((response) => {          \n          dispatch({\n            type: \"UPDATE_ROWS\",\n            payload: {\n              skip: requestedSkip,\n              rows: response,//.data.calcList,\n              totalCount: MAX_ROWS,\n            },\n          });\n        })\n        .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\n      dispatch({ type: \"UPDATE_QUERY\", payload: query });\n    }\n  };\n\n  useEffect(() => loadData());\n  const { rows, skip, totalCount, loading } = state;\n\n  return (\n    // <Paper className=\"promotionTable\">\n    //   <h1>Our Promotions</h1>\n    //   <Grid rows={rows} columns={columns} getRowId={getRowId}>\n    //     <SelectionState\n    //       selection={selection}\n    //       onSelectionChange={setSelection}\n    //     />\n    //     <SelectTypeProvider\n    //       for={[\"Action\"]}\n    //       rowComponent\n    //       row={RowDetailState}\n    //     />\n    //     <DateTypeProvider for={dateColumns} />\n\n    //     <VirtualTableState\n    //       infiniteScrolling\n    //       loading={loading}\n    //       totalRowCount={totalCount}\n    //       pageSize={VIRTUAL_PAGE_SIZE}\n    //       skip={skip}\n    //       getRows={getRemoteRows}\n    //     />\n    //     <VirtualTable columnExtensions={tableColumnExtensions} />\n    //     <TableSelection highlightRow={true} />\n    //     <TableHeaderRow />\n    //     {editPromotion && (\n    //       <PromotionEditModal\n    //         calculation={editPromotion}\n    //         handleCloseEditModal={handleCloseEditModal}\n    //         open={openEditModal}\n    //         handleUpdateCalculation={handleUpdatePromotion}\n    //       />\n    //     )}\n    //   </Grid>\n    // </Paper>\n    <div></div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}