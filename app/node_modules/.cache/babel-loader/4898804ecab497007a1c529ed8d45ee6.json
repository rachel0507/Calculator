{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DC\\u05E0\\u05D5\\u05D1\\u05D5\\\\source\\\\repos\\\\CalculatorApp\\\\app\\\\src\\\\components\\\\calculationList\\\\calculationList.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from \"react\"; // import { DataGrid } from '@material-ui/data-grid';\n\nimport clsx from 'clsx';\nimport { createStyles, lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList'; // // import {\n// //   Column,\n// //   DataTypeProvider,\n// //   RowDetailState,\n// //   SelectionState,\n// //   VirtualTableState,\n// // } from \"@devexpress/dx-react-grid\";\n// // import {\n// //   Grid,\n// //   VirtualTable,\n// //   TableHeaderRow,\n// //   TableSelection,\n// // } from \"@devexpress/dx-react-grid-material-ui\";\n\nimport axios from \"axios\";\nimport reducer from \"../../actions/promotionReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//import \"./promotionTable.css\";\nconst URL = \"https://localhost:44306\"; // const getRowId = (row: any) => row.id;\n\nconst buildQueryString = (skip, take) => `${URL}/GetCalcList`;\n\nconst initialState = {\n  rows: [],\n  loading: false\n};\nexport default function CalculationList() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5); //   const [selection, setSelection] = useState<any | null>([]);\n  //   const [openEditModal, setOpenEditModal] = useState(false);\n  //   const [editPromotion, setEditCalculation] = useState<any | null>();\n\n  const getRemoteRows = (requestedSkip, take) => {\n    dispatch({\n      type: \"START_LOADING\",\n      payload: {\n        requestedSkip,\n        take\n      }\n    });\n  }; //   const handleCalculationEdit = (calculationId: string) => {\n  //     getCalculationById(calculationId).then((response) => {\n  //       let editCalculation: ICalculation | undefined = response.data.calculation;\n  //       setEditCalculation(editCalculation);\n  //       setOpenEditModal(true);\n  //     });\n  //   };\n  //   const handleCalculationDelete = (calculationId: string) => {\n  //     deleteCalculationById(calculationId)\n  //       .then(() => {\n  //         setSelection([]);\n  //         const updatedRows = rows.filter(function (row: any) {\n  //           return row._id !== calculationId;\n  //         });\n  //         dispatch({\n  //           type: \"UPDATE_ROWS\",\n  //           payload: {\n  //             rows: updatedRows,\n  //           },\n  //         });\n  //       })\n  //       .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\n  //   };\n  //   // const handlePromotionDuplicate = (promotionId: string) => {\n  //   //   let duplicatePromotion = _.find(rows, { _id: promotionId });\n  //   //   addCalc(duplicatePromotion)\n  //   //     .then((response) => {\n  //   //       setSelection([]);\n  //   //       const newPromotion = response.data.promotion;\n  //   //       const updatedRows = [...rows];\n  //   //       updatedRows.unshift(newPromotion);\n  //   //       dispatch({\n  //   //         type: \"UPDATE_ROWS\",\n  //   //         payload: {\n  //   //           rows: updatedRows,\n  //   //         },\n  //   //       });\n  //   //     }) \n  //   //     .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\n  //   // };\n\n\n  const loadData = () => {\n    const {\n      requestedSkip,\n      take,\n      lastQuery,\n      loading\n    } = state;\n    const query = buildQueryString(requestedSkip, take);\n\n    if (query !== lastQuery && !loading) {\n      dispatch({\n        type: \"FETCH_INIT\"\n      });\n      axios.get(query).then(response => {\n        dispatch({\n          type: \"UPDATE_ROWS\",\n          payload: {\n            rows: response.data //.promotions,\n\n          }\n        });\n      }).catch(() => dispatch({\n        type: \"REQUEST_ERROR\"\n      }));\n      dispatch({\n        type: \"UPDATE_QUERY\",\n        payload: query\n      });\n    }\n  };\n\n  useEffect(() => loadData());\n  const {\n    rows\n  } = state; //   const columns = [    \n  //    {\n  //       field: 'calculation',\n  //       headerName: 'Calculations',\n  //       sortable: false,\n  //       width: 160,\n  //       valueGetter: (params: any) =>\n  //       `${params.row.num1} ${params.row.oper} ${params.row.num2} = ${params.row.result}`\n  //       },\n  //     {\n  //       field:\n  //     }\n  //   ];\n  //   return (\n  //     <Paper className=\"calculationList\">\n  //       <h1>Calculations History</h1>\n  //       <div style={{ height: 400, width: '100%' }}>\n  //         <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n  //       </div>\n  //     </Paper>\n  //   );\n  // }\n\n  function stableSort(array) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  }\n\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n  } // interface HeadCell {\n  //   disablePadding: boolean;\n  //   id: keyof Data;\n  //   label: string;\n  //   numeric: boolean;\n  // }\n  // const headCells: HeadCell[] = [\n  //   { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  //   { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  //   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  //   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  //   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  // ];\n\n\n  function EnhancedTableHead(props) {\n    const {\n      classes,\n      onSelectAllClick,\n      numSelected,\n      rowCount\n    } = props;\n    return /*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: /*#__PURE__*/_jsxDEV(TableCell, {\n          padding: \"checkbox\",\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            indeterminate: numSelected > 0 && numSelected < rowCount,\n            checked: rowCount > 0 && numSelected === rowCount,\n            onChange: onSelectAllClick,\n            inputProps: {\n              'aria-label': 'select all desserts'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }, this);\n  }\n\n  const useToolbarStyles = makeStyles(theme => createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1)\n    },\n    highlight: theme.palette.type === 'light' ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    title: {\n      flex: '1 1 100%'\n    }\n  }));\n\n  const EnhancedTableToolbar = props => {\n    _s();\n\n    const classes = useToolbarStyles();\n    const {\n      numSelected\n    } = props;\n    return /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      }),\n      children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        color: \"inherit\",\n        variant: \"subtitle1\",\n        component: \"div\",\n        children: [numSelected, \" selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        variant: \"h6\",\n        id: \"tableTitle\",\n        component: \"div\",\n        children: \"Nutrition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Delete\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"delete\",\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Filter list\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"filter list\",\n          children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }, this);\n  };\n\n  _s(EnhancedTableToolbar, \"3YobLOlq21lAjJ1iCLt9G1iGJSo=\", false, function () {\n    return [useToolbarStyles];\n  });\n\n  const useStyles = makeStyles(theme => createStyles({\n    root: {\n      width: '100%'\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2)\n    },\n    table: {\n      minWidth: 750\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1\n    }\n  }));\n  const classes = useStyles();\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id.toString());\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }; // const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setDense(event.target.checked);\n  // };\n\n\n  const isSelected = id => selected.indexOf(id) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selected.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-labelledby\": \"tableTitle\",\n          size: \"medium\",\n          \"aria-label\": \"enhanced table\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            classes: classes,\n            numSelected: selected.length,\n            onSelectAllClick: handleSelectAllClick,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [stableSort(rows).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const isItemSelected = isSelected(row.id.toString());\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row.id.toString()),\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: isItemSelected,\n                    inputProps: {\n                      'aria-labelledby': labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"none\",\n                  children: [\"`$\", row.num1, \" $\", row.oper, \" $\", row.num2, \" = $\", row.result, \"`\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 23\n                }, this)]\n              }, row.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: 53 * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CalculationList, \"Qalan/PfiGd8OP/k7XqEY23JchM=\", true);\n\n_c = CalculationList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculationList\");","map":{"version":3,"sources":["C:/Users/לנובו/source/repos/CalculatorApp/app/src/components/calculationList/calculationList.tsx"],"names":["React","useReducer","useEffect","clsx","createStyles","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","axios","reducer","URL","buildQueryString","skip","take","initialState","rows","loading","CalculationList","state","dispatch","selected","setSelected","useState","page","setPage","rowsPerPage","setRowsPerPage","getRemoteRows","requestedSkip","type","payload","loadData","lastQuery","query","get","then","response","data","catch","stableSort","array","stabilizedThis","map","el","index","sort","a","b","descendingComparator","orderBy","getComparator","order","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","useStyles","width","paper","marginBottom","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","handleSelectAllClick","event","target","checked","newSelecteds","n","id","handleClick","selectedIndex","indexOf","toString","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","min","row","isItemSelected","labelId","num1","oper","num2","result"],"mappings":"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","sourcesContent":[" import React, { useState, useReducer, useEffect } from \"react\";\r\n// import { DataGrid } from '@material-ui/data-grid';\r\nimport clsx from 'clsx';\r\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n// // import {\r\n// //   Column,\r\n// //   DataTypeProvider,\r\n// //   RowDetailState,\r\n// //   SelectionState,\r\n// //   VirtualTableState,\r\n// // } from \"@devexpress/dx-react-grid\";\r\n// // import {\r\n// //   Grid,\r\n// //   VirtualTable,\r\n// //   TableHeaderRow,\r\n// //   TableSelection,\r\n// // } from \"@devexpress/dx-react-grid-material-ui\";\r\n import axios from \"axios\";\r\n import reducer from \"../../actions/promotionReducer\";\r\n\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport {\r\n  addCalculation,\r\n  deleteCalculationById,\r\n  updateCalculation,\r\n  getCalculationById,\r\n} from \"../../actions/promotionApiActions\";\r\n//import \"./promotionTable.css\";\r\n\r\n const URL = \"https://localhost:44306\"; \r\n\r\n// const getRowId = (row: any) => row.id;\r\n const buildQueryString = (skip: any, take: any) =>\r\n   `${URL}/GetCalcList`;\r\n\r\nconst initialState = {\r\n  rows: [],\r\n  loading: false\r\n};\r\n\r\n export default function CalculationList() {\r\n   const [state, dispatch] = useReducer(reducer, initialState);\r\n  \r\n   const [selected, setSelected] = React.useState<string[]>([]);\r\n   const [page, setPage] = React.useState(0);\r\n   const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n//   const [selection, setSelection] = useState<any | null>([]);\r\n\r\n//   const [openEditModal, setOpenEditModal] = useState(false);\r\n//   const [editPromotion, setEditCalculation] = useState<any | null>();\r\n\r\n  const getRemoteRows = (requestedSkip: number, take: number) => {\r\n    dispatch({ type: \"START_LOADING\", payload: { requestedSkip, take } });\r\n  };\r\n\r\n//   const handleCalculationEdit = (calculationId: string) => {\r\n//     getCalculationById(calculationId).then((response) => {\r\n//       let editCalculation: ICalculation | undefined = response.data.calculation;\r\n//       setEditCalculation(editCalculation);\r\n//       setOpenEditModal(true);\r\n//     });\r\n//   };\r\n\r\n//   const handleCalculationDelete = (calculationId: string) => {\r\n//     deleteCalculationById(calculationId)\r\n//       .then(() => {\r\n//         setSelection([]);\r\n//         const updatedRows = rows.filter(function (row: any) {\r\n//           return row._id !== calculationId;\r\n//         });\r\n//         dispatch({\r\n//           type: \"UPDATE_ROWS\",\r\n//           payload: {\r\n//             rows: updatedRows,\r\n//           },\r\n//         });\r\n//       })\r\n//       .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n//   };\r\n\r\n//   // const handlePromotionDuplicate = (promotionId: string) => {\r\n//   //   let duplicatePromotion = _.find(rows, { _id: promotionId });\r\n//   //   addCalc(duplicatePromotion)\r\n//   //     .then((response) => {\r\n//   //       setSelection([]);\r\n//   //       const newPromotion = response.data.promotion;\r\n//   //       const updatedRows = [...rows];\r\n//   //       updatedRows.unshift(newPromotion);\r\n//   //       dispatch({\r\n//   //         type: \"UPDATE_ROWS\",\r\n//   //         payload: {\r\n//   //           rows: updatedRows,\r\n//   //         },\r\n//   //       });\r\n//   //     }) \r\n//   //     .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n//   // };\r\nconst loadData = () => {\r\n  const { requestedSkip, take, lastQuery, loading } = state;\r\n  const query = buildQueryString(requestedSkip, take);\r\n  if (query !== lastQuery && !loading) {\r\n    dispatch({ type: \"FETCH_INIT\" });\r\n    axios\r\n      .get(query)\r\n      .then((response) => {          \r\n        dispatch({\r\n          type: \"UPDATE_ROWS\",\r\n          payload: {\r\n            rows: response.data,//.promotions,\r\n          },\r\n        });\r\n      })\r\n      .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n    dispatch({ type: \"UPDATE_QUERY\", payload: query });\r\n  }\r\n};\r\n\r\n   useEffect(() => loadData());\r\n   const { rows } = state;\r\n\r\n  \r\n  \r\n//   const columns = [    \r\n//    {\r\n//       field: 'calculation',\r\n//       headerName: 'Calculations',\r\n//       sortable: false,\r\n//       width: 160,\r\n//       valueGetter: (params: any) =>\r\n//       `${params.row.num1} ${params.row.oper} ${params.row.num2} = ${params.row.result}`\r\n//       },\r\n//     {\r\n//       field:\r\n//     }\r\n//   ];\r\n  \r\n  \r\n\r\n\r\n//   return (\r\n//     <Paper className=\"calculationList\">\r\n//       <h1>Calculations History</h1>\r\n//       <div style={{ height: 400, width: '100%' }}>\r\n//         <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n//       </div>\r\n//     </Paper>\r\n//   );\r\n// }\r\n\r\nfunction stableSort<T>(array: T[]) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n  order: Order,\r\n  orderBy: Key,\r\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// interface HeadCell {\r\n//   disablePadding: boolean;\r\n//   id: keyof Data;\r\n//   label: string;\r\n//   numeric: boolean;\r\n// }\r\n\r\n// const headCells: HeadCell[] = [\r\n//   { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n//   { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n//   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n// ];\r\ntype Order = 'asc' | 'desc';\r\n\r\n\r\ninterface EnhancedTableProps {\r\n  classes: ReturnType<typeof useStyles>;\r\n  numSelected: number;\r\n // onRequestSort: (event: React.MouseEvent<unknown>, property: keyof ICalculation) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  //order: Order;\r\n  //orderBy: string;\r\n  rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { classes, onSelectAllClick, numSelected, rowCount } = props;\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {/* {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))} */}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n          }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n          },\r\n    title: {\r\n      flex: '1 1 100%',\r\n    },\r\n  }),\r\n);\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  numSelected: number;\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  }),\r\n);\r\nconst classes = useStyles();\r\n\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n: ICalculation) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event: React.MouseEvent<unknown>, id: string) => {\r\n    const selectedIndex = selected.indexOf(id.toString());\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   setDense(event.target.checked);\r\n  // };\r\n\r\n  const isSelected = (id: string) => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"medium\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows)\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected((row as any).id.toString());\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, (row as any).id.toString())}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={(row as any).id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                            `${(row as any).num1} ${(row as any).oper} ${(row as any).num2} = ${(row as any).result}`\r\n                      </TableCell>\r\n                      {/* <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell> */}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}