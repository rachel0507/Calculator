{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DC\\u05E0\\u05D5\\u05D1\\u05D5\\\\source\\\\repos\\\\CalculatorApp\\\\app\\\\src\\\\components\\\\calculationList\\\\calculationList.tsx\",\n    _s3 = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from \"react\";\nimport clsx from 'clsx';\nimport { createStyles, lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport axios from \"axios\";\nimport reducer from \"../../actions/calculatorReducer\";\nimport { deleteCalculationById } from \"../../actions/calculatorApiActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"https://localhost:44306\";\n\nconst buildQueryString = (skip, take) => `${URL}/GetCalcList`;\n\nconst initialState = {\n  rows: [],\n  loading: false\n};\n\nconst CalculationList = props => {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [state, dispatch] = useReducer(reducer, initialState); //   const handleCalculationEdit = (calculationId: string) => {\n  //     getCalculationById(calculationId).then((response) => {\n  //       let editCalculation: ICalculation | undefined = response.data.calculation;\n  //       setEditCalculation(editCalculation);\n  //       setOpenEditModal(true);\n  //     });\n  //   };\n\n  useEffect(() => loadData());\n  const {\n    rows\n  } = state;\n\n  const loadData = () => {\n    const {\n      requestedSkip,\n      take,\n      lastQuery,\n      loading\n    } = state;\n    const query = buildQueryString(requestedSkip, take);\n\n    if (query !== lastQuery && !loading) {\n      dispatch({\n        type: \"FETCH_INIT\"\n      });\n      axios.get(query).then(response => {\n        dispatch({\n          type: \"UPDATE_ROWS\",\n          payload: {\n            rows: response.data //.promotions,\n\n          }\n        });\n      }).catch(() => dispatch({\n        type: \"REQUEST_ERROR\"\n      }));\n      dispatch({\n        type: \"UPDATE_QUERY\",\n        payload: query\n      });\n    }\n  };\n\n  function stableSort(array) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    return stabilizedThis.map(el => el[0]);\n  }\n\n  const EnhancedTableHead = props => {\n    const {\n      onSelectAllClick,\n      numSelected,\n      rowCount\n    } = props;\n    return /*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          padding: \"checkbox\",\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            indeterminate: numSelected > 0 && numSelected < rowCount,\n            checked: rowCount > 0 && numSelected === rowCount,\n            onChange: onSelectAllClick,\n            inputProps: {\n              'aria-label': 'select all desserts'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          align: 'left',\n          padding: 'default',\n          sortDirection: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  };\n\n  const useToolbarStyles = makeStyles(theme => createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1)\n    },\n    highlight: theme.palette.type === 'light' ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    title: {\n      flex: '1 1 100%'\n    }\n  }));\n\n  const EnhancedTableToolbar = props => {\n    _s();\n\n    const classes = useToolbarStyles();\n    const {\n      numSelected,\n      onDeleteClick\n    } = props;\n    return /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      }),\n      children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        color: \"inherit\",\n        variant: \"subtitle1\",\n        component: \"div\",\n        children: [numSelected, \" selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        variant: \"h6\",\n        id: \"tableTitle\",\n        component: \"div\",\n        children: \"Calculation History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Delete\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: onDeleteClick,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"delete\",\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(EnhancedTableToolbar, \"3YobLOlq21lAjJ1iCLt9G1iGJSo=\", false, function () {\n    return [useToolbarStyles];\n  });\n\n  const useStyles = makeStyles(theme => createStyles({\n    root: {\n      width: '100%'\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2)\n    },\n    table: {\n      minWidth: 750\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1\n    }\n  }));\n\n  const EnhancedTable = () => {\n    _s2();\n\n    const classes = useStyles();\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleSelectAllClick = event => {\n      if (event.target.checked) {\n        const newSelecteds = rows.map(n => {\n          var _n$id;\n\n          return (_n$id = n.id) === null || _n$id === void 0 ? void 0 : _n$id.toString();\n        });\n        setSelected(newSelecteds);\n        return;\n      }\n\n      setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n      const selectedIndex = selected.indexOf(id.toString());\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      setSelected(newSelected);\n    };\n\n    const handleCalculationDelete = () => {\n      deleteCalculationById(selected).then(updatedRows => {\n        setSelected([]);\n        dispatch({\n          type: \"UPDATE_ROWS\",\n          payload: {\n            rows: updatedRows\n          }\n        });\n      }).catch(() => dispatch({\n        type: \"REQUEST_ERROR\"\n      }));\n    };\n\n    const handleChangePage = (event, newPage) => {\n      setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    const getOperString = op => {\n      switch (op) {\n        case oper.add:\n          return '+';\n\n        case oper.sub:\n          return '-';\n\n        case oper.mul:\n          return '*';\n\n        case oper.div:\n          return ':';\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n          numSelected: selected.length,\n          onDeleteClick: handleCalculationDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            \"aria-labelledby\": \"tableTitle\",\n            size: \"medium\",\n            \"aria-label\": \"enhanced table\",\n            children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n              numSelected: selected.length,\n              onSelectAllClick: handleSelectAllClick,\n              rowCount: rows.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [stableSort(rows).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                const isItemSelected = isSelected(row.id.toString());\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  onClick: event => handleClick(event, row.id.toString()),\n                  role: \"checkbox\",\n                  \"aria-checked\": isItemSelected,\n                  tabIndex: -1,\n                  selected: isItemSelected,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: isItemSelected,\n                      inputProps: {\n                        'aria-labelledby': labelId\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    id: labelId,\n                    scope: \"row\",\n                    padding: \"none\",\n                    children: [row.num1, \" \", getOperString(row.oper), \" \", row.num2, \" = \", row.result]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 25\n                  }, this)]\n                }, row.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this);\n              }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                style: {\n                  height: 53 * emptyRows\n                },\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s2(EnhancedTable, \"uGGgYxaCjzsCM0dP1PcAuh8txKw=\", false, function () {\n    return [useStyles];\n  });\n\n  return /*#__PURE__*/_jsxDEV(EnhancedTable, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 11\n  }, this);\n};\n\n_s3(CalculationList, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = CalculationList;\nexport default CalculationList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculationList\");","map":{"version":3,"sources":["C:/Users/לנובו/source/repos/CalculatorApp/app/src/components/calculationList/calculationList.tsx"],"names":["React","useReducer","useEffect","clsx","createStyles","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","axios","reducer","deleteCalculationById","URL","buildQueryString","skip","take","initialState","rows","loading","CalculationList","props","state","dispatch","loadData","requestedSkip","lastQuery","query","type","get","then","response","payload","data","catch","stableSort","array","stabilizedThis","map","el","index","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","classes","onDeleteClick","useStyles","width","paper","marginBottom","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","EnhancedTable","selected","setSelected","useState","page","setPage","rowsPerPage","setRowsPerPage","handleSelectAllClick","event","target","checked","newSelecteds","n","id","toString","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleCalculationDelete","updatedRows","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","min","getOperString","op","oper","add","sub","mul","div","row","isItemSelected","labelId","num1","num2","result"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, MouseEventHandler } from \"react\";\r\nimport clsx from 'clsx';\r\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport axios from \"axios\";\r\nimport reducer from \"../../actions/calculatorReducer\";\r\n\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport {\r\n  saveCalculation,\r\n  deleteCalculationById,\r\n  updateCalculation,\r\n  getCalculationById,\r\n} from \"../../actions/calculatorApiActions\";\r\n\r\nconst URL = \"https://localhost:44306\";\r\n\r\nconst buildQueryString = (skip: any, take: any) =>\r\n  `${URL}/GetCalcList`;\r\n\r\nconst initialState = {\r\n  rows: [],\r\n  loading: false\r\n};\r\n\r\ninterface CalculationListProps {\r\n  handleCalculationEdit: any;\r\n}\r\n\r\nconst CalculationList = (props: CalculationListProps) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //   const handleCalculationEdit = (calculationId: string) => {\r\n  //     getCalculationById(calculationId).then((response) => {\r\n  //       let editCalculation: ICalculation | undefined = response.data.calculation;\r\n  //       setEditCalculation(editCalculation);\r\n  //       setOpenEditModal(true);\r\n  //     });\r\n  //   };\r\n\r\n\r\n\r\n  useEffect(() => loadData());\r\n  const { rows } = state;\r\n\r\n  const loadData = () => {\r\n    const { requestedSkip, take, lastQuery, loading } = state;\r\n    const query = buildQueryString(requestedSkip, take);\r\n    if (query !== lastQuery && !loading) {\r\n      dispatch({ type: \"FETCH_INIT\" });\r\n      axios\r\n        .get(query)\r\n        .then((response) => {\r\n          dispatch({\r\n            type: \"UPDATE_ROWS\",\r\n            payload: {\r\n              rows: response.data,//.promotions,\r\n            },\r\n          });\r\n        })\r\n        .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n      dispatch({ type: \"UPDATE_QUERY\", payload: query });\r\n    }\r\n  };\r\n\r\n  function stableSort<T>(array: T[]) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    return stabilizedThis.map((el) => el[0]);\r\n\r\n  }\r\n\r\n  interface EnhancedTableProps {\r\n    numSelected: number;\r\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    rowCount: number;\r\n  }\r\n\r\n  const EnhancedTableHead = (props: EnhancedTableProps) => {\r\n    const { onSelectAllClick, numSelected, rowCount } = props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ 'aria-label': 'select all desserts' }}\r\n            />\r\n          </TableCell>\r\n\r\n          <TableCell\r\n            align={'left'}\r\n            padding={'default'}\r\n            sortDirection={false}\r\n          >\r\n\r\n          </TableCell>\r\n\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n\r\n  const useToolbarStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n      },\r\n      highlight:\r\n        theme.palette.type === 'light'\r\n          ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n          }\r\n          : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n          },\r\n      title: {\r\n        flex: '1 1 100%',\r\n      },\r\n    }),\r\n  );\r\n\r\n  interface EnhancedTableToolbarProps {\r\n    numSelected: number;\r\n    onDeleteClick: MouseEventHandler<HTMLDivElement>;\r\n  }\r\n\r\n  const EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected, onDeleteClick } = props;\r\n\r\n    return (\r\n      <Toolbar\r\n        className={clsx(classes.root, {\r\n          [classes.highlight]: numSelected > 0,\r\n        })}\r\n      >\r\n        {numSelected > 0 ? (\r\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n            Calculation History\r\n          </Typography>\r\n        )}\r\n\r\n        <Tooltip title=\"Delete\" >\r\n          <div onClick={onDeleteClick}>\r\n            <IconButton aria-label=\"delete\" >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        width: '100%',\r\n      },\r\n      paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n      table: {\r\n        minWidth: 750,\r\n      },\r\n      visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n      },\r\n    }),\r\n  );\r\n\r\n  const EnhancedTable = () => {\r\n    const classes = useStyles();\r\n    const [selected, setSelected] = React.useState<string[]>([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n\r\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (event.target.checked) {\r\n        const newSelecteds = rows.map((n: ICalculation) => n.id?.toString());\r\n        setSelected(newSelecteds);\r\n        return;\r\n      }\r\n      setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<unknown>, id: string) => {\r\n      const selectedIndex = selected.indexOf(id.toString());\r\n      let newSelected: string[] = [];\r\n\r\n      if (selectedIndex === -1) {\r\n        newSelected = newSelected.concat(selected, id);\r\n      } else if (selectedIndex === 0) {\r\n        newSelected = newSelected.concat(selected.slice(1));\r\n      } else if (selectedIndex === selected.length - 1) {\r\n        newSelected = newSelected.concat(selected.slice(0, -1));\r\n      } else if (selectedIndex > 0) {\r\n        newSelected = newSelected.concat(\r\n          selected.slice(0, selectedIndex),\r\n          selected.slice(selectedIndex + 1),\r\n        );\r\n      }\r\n\r\n      setSelected(newSelected);\r\n    };\r\n\r\n    const handleCalculationDelete = () => {\r\n      deleteCalculationById(selected)\r\n        .then((updatedRows) => {\r\n          setSelected([]);\r\n          dispatch({\r\n            type: \"UPDATE_ROWS\",\r\n            payload: {\r\n              rows: updatedRows,\r\n            },\r\n          });\r\n        })\r\n        .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n    };\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n      setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n\r\n    const isSelected = (id: string) => selected.indexOf(id) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    const getOperString = (op: oper) => {\r\n      switch (op) {\r\n        case oper.add:\r\n          return '+';\r\n        case oper.sub:\r\n          return '-';\r\n        case oper.mul:\r\n          return '*';\r\n        case oper.div:\r\n          return ':';\r\n      }\r\n    }\r\n    return (\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <EnhancedTableToolbar\r\n            numSelected={selected.length}\r\n            onDeleteClick={handleCalculationDelete}\r\n          />\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size=\"medium\"\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                numSelected={selected.length}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(rows)\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const isItemSelected = isSelected((row as any).id.toString());\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        onClick={(event) => handleClick(event, (row as any).id.toString())}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isItemSelected}\r\n                        tabIndex={-1}\r\n                        key={(row as any).id}\r\n                        selected={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            checked={isItemSelected}\r\n                            inputProps={{ 'aria-labelledby': labelId }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                          {(row as any).num1} {getOperString((row as any).oper)} {(row as any).num2} = {(row as any).result}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: 53 * emptyRows }}>\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (<EnhancedTable></EnhancedTable>);\r\n}\r\n\r\nexport default CalculationList;"]},"metadata":{},"sourceType":"module"}