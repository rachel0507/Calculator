{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://localhost:4000\";\nexport const getPromotions = async (skip, take) => {\n  try {\n    const promotions = await axios.get(baseUrl + `/getAllPromotions?skip=${skip}&take=${take}`);\n    return promotions;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getPromotionById = async (_id) => {\n  try {\n    const promotion = await axios.get(baseUrl + `/getPromotionById/${_id}`);\n    return promotion;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const addPromotion = async (newPromotion) => {\n  try {\n    const promotion = {\n      promotionName: newPromotion.promotionName,\n      promotionType: newPromotion.promotionType,\n      promotionStartDate: newPromotion.promotionStartDate,\n      promotionEndDate: newPromotion.promotionEndDate,\n      userGroupName: newPromotion.userGroupName\n    };\n    const savePromotion = await axios.post(baseUrl + \"/addPromotion\", promotion);\n    return savePromotion;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const updatePromotion = async (promotion) => {\n  try {\n    const promotionUpdate = {\n      promotionName: promotion.promotionName,\n      promotionType: promotion.promotionType,\n      promotionStartDate: promotion.promotionStartDate,\n      promotionEndDate: promotion.promotionEndDate,\n      userGroupName: promotion.userGroupName\n    };\n    const updatedPromotion = await axios.put(`${baseUrl}/updatePromotion/${promotion._id}`, promotionUpdate);\n    return updatedPromotion;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const deletePromotionById = async (_id) => {\n  try {\n    const deletedPromotion = await axios.delete(`${baseUrl}/deletePromotion/${_id}`);\n    return deletedPromotion;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const deleteAllPromotions = async () => {\n  try {\n    const deletedPromotion = await axios.delete(`${baseUrl}/deleteAllPromotions`);\n    return deletedPromotion;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/batyayur/OneDrive - AMDOCS/Protected Folders/Documents/BattyDocument/work/MoonActiveProject/ui/src/actions/promotionApiActions.ts"],"names":["axios","baseUrl","getPromotions","skip","take","promotions","get","error","Error","getPromotionById","_id","promotion","addPromotion","newPromotion","promotionName","promotionType","promotionStartDate","promotionEndDate","userGroupName","savePromotion","post","updatePromotion","promotionUpdate","updatedPromotion","put","deletePromotionById","deletedPromotion","delete","deleteAllPromotions"],"mappings":"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","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\n\r\nconst baseUrl: string = \"http://localhost:4000\";\r\n\r\nexport const getPromotions = async (\r\n  skip: number,\r\n  take: number\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const promotions: AxiosResponse<ApiDataType> = await axios.get(\r\n      baseUrl + `/getAllPromotions?skip=${skip}&take=${take}`\r\n    );\r\n    return promotions;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const getPromotionById = async (\r\n  _id: string\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const promotion: AxiosResponse<ApiDataType> = await axios.get(\r\n      baseUrl + `/getPromotionById/${_id}`\r\n    );\r\n    return promotion;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const addPromotion = async (\r\n  newPromotion: IPromotion\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const promotion: Omit<IPromotion, \"_id\"> = {\r\n      promotionName: newPromotion.promotionName,\r\n      promotionType: newPromotion.promotionType,\r\n      promotionStartDate: newPromotion.promotionStartDate,\r\n      promotionEndDate: newPromotion.promotionEndDate,\r\n      userGroupName: newPromotion.userGroupName,\r\n    };\r\n    const savePromotion: AxiosResponse<ApiDataType> = await axios.post(\r\n      baseUrl + \"/addPromotion\",\r\n      promotion\r\n    );\r\n    return savePromotion;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const updatePromotion = async (\r\n  promotion: IPromotion\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const promotionUpdate: Pick<IPromotion, any> = {\r\n      promotionName: promotion.promotionName,\r\n      promotionType: promotion.promotionType,\r\n      promotionStartDate: promotion.promotionStartDate,\r\n      promotionEndDate: promotion.promotionEndDate,\r\n      userGroupName: promotion.userGroupName,\r\n    };\r\n    const updatedPromotion: AxiosResponse<ApiDataType> = await axios.put(\r\n      `${baseUrl}/updatePromotion/${promotion._id}`,\r\n      promotionUpdate\r\n    );\r\n    return updatedPromotion;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const deletePromotionById = async (\r\n  _id: string\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const deletedPromotion: AxiosResponse<ApiDataType> = await axios.delete(\r\n      `${baseUrl}/deletePromotion/${_id}`\r\n    );\r\n    return deletedPromotion;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const deleteAllPromotions = async (): Promise<\r\n  AxiosResponse<ApiDataType>\r\n> => {\r\n  try {\r\n    const deletedPromotion: AxiosResponse<ApiDataType> = await axios.delete(\r\n      `${baseUrl}/deleteAllPromotions`\r\n    );\r\n    return deletedPromotion;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}