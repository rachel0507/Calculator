{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DC\\u05E0\\u05D5\\u05D1\\u05D5\\\\source\\\\repos\\\\CalculatorApp\\\\app\\\\src\\\\components\\\\calculationList\\\\calculationList.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// import React, { useState, useReducer, useEffect } from \"react\";\n// import { DataGrid } from '@material-ui/data-grid';\n// import Paper from \"@material-ui/core/Paper\";\n// // import {\n// //   Column,\n// //   DataTypeProvider,\n// //   RowDetailState,\n// //   SelectionState,\n// //   VirtualTableState,\n// // } from \"@devexpress/dx-react-grid\";\n// // import {\n// //   Grid,\n// //   VirtualTable,\n// //   TableHeaderRow,\n// //   TableSelection,\n// // } from \"@devexpress/dx-react-grid-material-ui\";\n// import axios from \"axios\";\n// import reducer from \"../../actions/promotionReducer\";\n// import { MenuItem, Select } from \"@material-ui/core\";\n// import {\n//   addCalculation,\n//   deleteCalculationById,\n//   updateCalculation,\n//   getCalculationById,\n// } from \"../../actions/promotionApiActions\";\n// //import \"./promotionTable.css\";\n// const URL = \"https://localhost:44306\"; \n// const getRowId = (row: any) => row.id;\n// const buildQueryString = (skip: any, take: any) =>\n//   `${URL}/GetCalcList`;\n// const initialState = {\n//   rows: [],\n//   loading: false\n// };\n// export default function CalculationList() {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n//   const [selection, setSelection] = useState<any | null>([]);\n//   const [openEditModal, setOpenEditModal] = useState(false);\n//   const [editPromotion, setEditCalculation] = useState<any | null>();\n//   const getRemoteRows = (requestedSkip: number, take: number) => {\n//     dispatch({ type: \"START_LOADING\", payload: { requestedSkip, take } });\n//   };\n//   const handleCalculationEdit = (calculationId: string) => {\n//     getCalculationById(calculationId).then((response) => {\n//       let editCalculation: ICalculation | undefined = response.data.calculation;\n//       setEditCalculation(editCalculation);\n//       setOpenEditModal(true);\n//     });\n//   };\n//   const handleCalculationDelete = (calculationId: string) => {\n//     deleteCalculationById(calculationId)\n//       .then(() => {\n//         setSelection([]);\n//         const updatedRows = rows.filter(function (row: any) {\n//           return row._id !== calculationId;\n//         });\n//         dispatch({\n//           type: \"UPDATE_ROWS\",\n//           payload: {\n//             rows: updatedRows,\n//           },\n//         });\n//       })\n//       .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\n//   };\n//   // const handlePromotionDuplicate = (promotionId: string) => {\n//   //   let duplicatePromotion = _.find(rows, { _id: promotionId });\n//   //   addCalc(duplicatePromotion)\n//   //     .then((response) => {\n//   //       setSelection([]);\n//   //       const newPromotion = response.data.promotion;\n//   //       const updatedRows = [...rows];\n//   //       updatedRows.unshift(newPromotion);\n//   //       dispatch({\n//   //         type: \"UPDATE_ROWS\",\n//   //         payload: {\n//   //           rows: updatedRows,\n//   //         },\n//   //       });\n//   //     }) \n//   //     .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\n//   // };\n//   const loadData = () => {\n//     const { requestedSkip, take, lastQuery, loading } = state;\n//     const query = buildQueryString(requestedSkip, take);\n//     if (query !== lastQuery && !loading) {\n//       dispatch({ type: \"FETCH_INIT\" });\n//       axios\n//         .get(query)\n//         .then((response) => {          \n//           dispatch({\n//             type: \"UPDATE_ROWS\",\n//             payload: {\n//               skip: requestedSkip,\n//               rows: response.data//.promotions             \n//             },\n//           });\n//         })\n//         .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\n//       dispatch({ type: \"UPDATE_QUERY\", payload: query });\n//     }\n//   };\n//   useEffect(() => loadData());\n//   const { rows } = state;\n//   const columns = [    \n//    {\n//       field: 'calculation',\n//       headerName: 'Calculations',\n//       sortable: false,\n//       width: 160,\n//       valueGetter: (params: any) =>\n//       `${params.row.num1} ${params.row.oper} ${params.row.num2} = ${params.row.result}`\n//       },\n//     {\n//       field:\n//     }\n//   ];\n//   return (\n//     <Paper className=\"calculationList\">\n//       <h1>Calculations History</h1>\n//       <div style={{ height: 400, width: '100%' }}>\n//         <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\n//       </div>\n//     </Paper>\n//   );\n// }\nimport React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  rows\n} = state; // interface HeadCell {\n//   disablePadding: boolean;\n//   id: keyof Data;\n//   label: string;\n//   numeric: boolean;\n// }\n// const headCells: HeadCell[] = [\n//   { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n//   { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n//   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n// ];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    numSelected,\n    rowCount\n  } = props;\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\nconst useToolbarStyles = makeStyles(theme => createStyles({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  _s();\n\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"Nutrition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"delete\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Filter list\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"filter list\",\n        children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EnhancedTableToolbar, \"3YobLOlq21lAjJ1iCLt9G1iGJSo=\", false, function () {\n  return [useToolbarStyles];\n});\n\n_c2 = EnhancedTableToolbar;\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable() {\n  _s2();\n\n  const classes = useStyles();\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }; // const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setDense(event.target.checked);\n  // };\n\n\n  const isSelected = id => selected.indexOf(id) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selected.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-labelledby\": \"tableTitle\",\n          size: dense ? 'small' : 'medium',\n          \"aria-label\": \"enhanced table\",\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            classes: classes,\n            numSelected: selected.length,\n            onSelectAllClick: handleSelectAllClick,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const isItemSelected = isSelected(row.name);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row.id),\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: isItemSelected,\n                    inputProps: {\n                      'aria-labelledby': labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"none\",\n                  children: [\"`$\", row.num1, \" $\", row.oper, \" $\", row.num2, \" = $\", row.result, \"`\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 23\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: (dense ? 33 : 53) * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(EnhancedTable, \"uGGgYxaCjzsCM0dP1PcAuh8txKw=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = EnhancedTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"EnhancedTable\");","map":{"version":3,"sources":["C:/Users/לנובו/source/repos/CalculatorApp/app/src/components/calculationList/calculationList.tsx"],"names":["React","clsx","createStyles","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","rows","state","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","useStyles","width","paper","marginBottom","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","EnhancedTable","selected","setSelected","useState","page","setPage","rowsPerPage","setRowsPerPage","handleSelectAllClick","event","target","checked","newSelecteds","map","n","id","handleClick","selectedIndex","indexOf","newSelected","concat","name","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","min","dense","stableSort","getComparator","order","orderBy","row","index","isItemSelected","labelId","num1","oper","num2","result"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,UAAhC,QAAyD,0BAAzD;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAEA,MAAM;AAAEC,EAA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","sourcesContent":["// import React, { useState, useReducer, useEffect } from \"react\";\r\n// import { DataGrid } from '@material-ui/data-grid';\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// // import {\r\n// //   Column,\r\n// //   DataTypeProvider,\r\n// //   RowDetailState,\r\n// //   SelectionState,\r\n// //   VirtualTableState,\r\n// // } from \"@devexpress/dx-react-grid\";\r\n// // import {\r\n// //   Grid,\r\n// //   VirtualTable,\r\n// //   TableHeaderRow,\r\n// //   TableSelection,\r\n// // } from \"@devexpress/dx-react-grid-material-ui\";\r\n// import axios from \"axios\";\r\n// import reducer from \"../../actions/promotionReducer\";\r\n\r\n// import { MenuItem, Select } from \"@material-ui/core\";\r\n// import {\r\n//   addCalculation,\r\n//   deleteCalculationById,\r\n//   updateCalculation,\r\n//   getCalculationById,\r\n// } from \"../../actions/promotionApiActions\";\r\n// //import \"./promotionTable.css\";\r\n\r\n// const URL = \"https://localhost:44306\"; \r\n\r\n// const getRowId = (row: any) => row.id;\r\n// const buildQueryString = (skip: any, take: any) =>\r\n//   `${URL}/GetCalcList`;\r\n\r\n// const initialState = {\r\n//   rows: [],\r\n//   loading: false\r\n// };\r\n\r\n// export default function CalculationList() {\r\n//   const [state, dispatch] = useReducer(reducer, initialState);\r\n//   const [selection, setSelection] = useState<any | null>([]);\r\n\r\n//   const [openEditModal, setOpenEditModal] = useState(false);\r\n//   const [editPromotion, setEditCalculation] = useState<any | null>();\r\n\r\n//   const getRemoteRows = (requestedSkip: number, take: number) => {\r\n//     dispatch({ type: \"START_LOADING\", payload: { requestedSkip, take } });\r\n//   };\r\n\r\n//   const handleCalculationEdit = (calculationId: string) => {\r\n//     getCalculationById(calculationId).then((response) => {\r\n//       let editCalculation: ICalculation | undefined = response.data.calculation;\r\n//       setEditCalculation(editCalculation);\r\n//       setOpenEditModal(true);\r\n//     });\r\n//   };\r\n\r\n//   const handleCalculationDelete = (calculationId: string) => {\r\n//     deleteCalculationById(calculationId)\r\n//       .then(() => {\r\n//         setSelection([]);\r\n//         const updatedRows = rows.filter(function (row: any) {\r\n//           return row._id !== calculationId;\r\n//         });\r\n//         dispatch({\r\n//           type: \"UPDATE_ROWS\",\r\n//           payload: {\r\n//             rows: updatedRows,\r\n//           },\r\n//         });\r\n//       })\r\n//       .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n//   };\r\n\r\n//   // const handlePromotionDuplicate = (promotionId: string) => {\r\n//   //   let duplicatePromotion = _.find(rows, { _id: promotionId });\r\n//   //   addCalc(duplicatePromotion)\r\n//   //     .then((response) => {\r\n//   //       setSelection([]);\r\n//   //       const newPromotion = response.data.promotion;\r\n//   //       const updatedRows = [...rows];\r\n//   //       updatedRows.unshift(newPromotion);\r\n//   //       dispatch({\r\n//   //         type: \"UPDATE_ROWS\",\r\n//   //         payload: {\r\n//   //           rows: updatedRows,\r\n//   //         },\r\n//   //       });\r\n//   //     }) \r\n//   //     .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n//   // };\r\n\r\n\r\n//   const loadData = () => {\r\n//     const { requestedSkip, take, lastQuery, loading } = state;\r\n//     const query = buildQueryString(requestedSkip, take);\r\n//     if (query !== lastQuery && !loading) {\r\n//       dispatch({ type: \"FETCH_INIT\" });\r\n//       axios\r\n//         .get(query)\r\n//         .then((response) => {          \r\n//           dispatch({\r\n//             type: \"UPDATE_ROWS\",\r\n//             payload: {\r\n//               skip: requestedSkip,\r\n//               rows: response.data//.promotions             \r\n//             },\r\n//           });\r\n//         })\r\n//         .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n//       dispatch({ type: \"UPDATE_QUERY\", payload: query });\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => loadData());\r\n//   const { rows } = state;\r\n\r\n  \r\n  \r\n//   const columns = [    \r\n//    {\r\n//       field: 'calculation',\r\n//       headerName: 'Calculations',\r\n//       sortable: false,\r\n//       width: 160,\r\n//       valueGetter: (params: any) =>\r\n//       `${params.row.num1} ${params.row.oper} ${params.row.num2} = ${params.row.result}`\r\n//       },\r\n//     {\r\n//       field:\r\n//     }\r\n//   ];\r\n  \r\n  \r\n\r\n\r\n//   return (\r\n//     <Paper className=\"calculationList\">\r\n//       <h1>Calculations History</h1>\r\n//       <div style={{ height: 400, width: '100%' }}>\r\n//         <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n//       </div>\r\n//     </Paper>\r\n//   );\r\n// }\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nconst { rows } = state;\r\n\r\n\r\n// interface HeadCell {\r\n//   disablePadding: boolean;\r\n//   id: keyof Data;\r\n//   label: string;\r\n//   numeric: boolean;\r\n// }\r\n\r\n// const headCells: HeadCell[] = [\r\n//   { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n//   { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n//   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n// ];\r\ntype Order = 'asc' | 'desc';\r\n\r\n\r\ninterface EnhancedTableProps {\r\n  classes: ReturnType<typeof useStyles>;\r\n  numSelected: number;\r\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof ICalculation) => void;\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n  rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { classes, onSelectAllClick, numSelected, rowCount } = props;\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {/* {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))} */}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n          }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n          },\r\n    title: {\r\n      flex: '1 1 100%',\r\n    },\r\n  }),\r\n);\r\n\r\ninterface EnhancedTableToolbarProps {\r\n  numSelected: number;\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [selected, setSelected] = React.useState<number[]>([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n: ICalculation) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event: React.MouseEvent<unknown>, id: number) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   setDense(event.target.checked);\r\n  // };\r\n\r\n  const isSelected = (id: number) => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                            `${row.num1} ${row.oper} ${row.num2} = ${row.result}`\r\n                      </TableCell>\r\n                      {/* <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell> */}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}