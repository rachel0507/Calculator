{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DC\\u05E0\\u05D5\\u05D1\\u05D5\\\\source\\\\repos\\\\CalculatorApp\\\\app\\\\src\\\\components\\\\Calculator\\\\Calculator.tsx\";\nimport React from \"react\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport NumberFormatCustom from '../../common/react-number-format';\nimport './calculator.css';\nimport { saveCalculation } from \"../../actions/calculatorApiActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = props => {\n  const {\n    newCalculation,\n    setState\n  } = props;\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState(prevState => {\n      return { ...prevState,\n        [name]: value\n      };\n    });\n  };\n\n  const handleSaveCalculation = event => {\n    saveCalculation(newCalculation).then(response => {\n      const updatedRows = response.data;\n      setState(prevState => {\n        return { ...prevState,\n          id: updatedRows[0].id,\n          result: updatedRows[0].result\n        };\n      });\n      props.onCalculationSave(event, updatedRows);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"\",\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"num1\",\n      name: \"num1\",\n      required: true,\n      InputProps: {\n        inputComponent: NumberFormatCustom\n      },\n      variant: \"outlined\",\n      value: newCalculation.num1 || '',\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        id: \"demo-simple-select\",\n        name: \"oper\",\n        value: newCalculation.oper || '',\n        onChange: handleChange,\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 1,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 2,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 3,\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 4,\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"num2\",\n      name: \"num2\",\n      required: true,\n      InputProps: {\n        inputComponent: NumberFormatCustom\n      },\n      variant: \"outlined\",\n      value: newCalculation.num2 || '',\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleSaveCalculation(newCalculation),\n      color: \"primary\",\n      autoFocus: true,\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n      id: \"result\",\n      children: newCalculation.result || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["C:/Users/לנובו/source/repos/CalculatorApp/app/src/components/Calculator/Calculator.tsx"],"names":["React","FormControl","InputLabel","Select","MenuItem","Button","TextField","NumberFormatCustom","saveCalculation","Calculator","props","newCalculation","setState","handleChange","event","name","value","target","prevState","handleSaveCalculation","then","response","updatedRows","data","id","result","onCalculationSave","inputComponent","num1","oper","num2"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NumberFormatCustom from '../../common/react-number-format'\r\n\r\nimport './calculator.css'\r\n\r\nimport {\r\n    saveCalculation\r\n} from \"../../actions/calculatorApiActions\";\r\n\r\nexport interface CalculatorProps {\r\n    newCalculation: ICalculation,\r\n    setState: any,\r\n    onCalculationSave: (event: React.MouseEvent<unknown>, updatedRows: ICalculation[]) => void\r\n}\r\n\r\nexport interface CalculatorState { }\r\n\r\nconst Calculator = (props: CalculatorProps) => {\r\n    const { newCalculation, setState } = props;\r\n\r\n    const handleChange = (event: any) => {\r\n        const { name, value } = event.target;\r\n        setState((prevState: any) => {\r\n            return {\r\n                ...prevState,\r\n                [name]: value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleSaveCalculation = (event: any) => {\r\n        saveCalculation(newCalculation)\r\n            .then((response: any) => {\r\n                const updatedRows: any[] = response.data;\r\n                setState((prevState: any) => {\r\n                    return {\r\n                        ...prevState,\r\n                        id: (updatedRows[0] as any).id,\r\n                        result: (updatedRows[0] as any).result\r\n                    };\r\n                });\r\n                props.onCalculationSave(event, updatedRows as ICalculation[]);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <form className=\"\" noValidate autoComplete=\"off\">\r\n            <TextField\r\n                id=\"num1\"\r\n                name=\"num1\"\r\n                required\r\n                InputProps={{\r\n                    inputComponent: NumberFormatCustom as any,\r\n                  }}\r\n                variant=\"outlined\"\r\n                value={newCalculation.num1 || ''}\r\n                onChange={handleChange}\r\n            />\r\n            <FormControl>\r\n                <Select\r\n                    id=\"demo-simple-select\"\r\n                    name=\"oper\"\r\n                    value={newCalculation.oper || ''}\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                >\r\n                    <MenuItem value={1}>+</MenuItem>\r\n                    <MenuItem value={2}>-</MenuItem>\r\n                    <MenuItem value={3}>*</MenuItem>\r\n                    <MenuItem value={4}>:</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <TextField\r\n                id=\"num2\"\r\n                name=\"num2\"\r\n                required\r\n                InputProps={{\r\n                    inputComponent: NumberFormatCustom as any,\r\n                  }}\r\n                variant=\"outlined\"\r\n                value={newCalculation.num2 || ''}\r\n                onChange={handleChange}\r\n            />\r\n            <Button\r\n                onClick={() => handleSaveCalculation(newCalculation)}\r\n                color=\"primary\"\r\n                autoFocus\r\n            >=</Button>\r\n            <InputLabel id=\"result\">{newCalculation.result || ''}</InputLabel>            \r\n        </form>        \r\n    );\r\n}\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}