{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://localhost:44306\";\nexport const getCalcList = async () => {\n  try {\n    const calculations = await axios.get(baseUrl + `getCalcList`);\n    return calculations;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getCalculationById = async (_id) => {\n  try {\n    const calculation = await axios.get(baseUrl + `/getCalculationById/${_id}`);\n    return calculation;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const addCalculation = async (newCalculation) => {\n  try {\n    const calculation = {\n      num1: newCalculation.num1,\n      num2: newCalculation.num2,\n      oper: newCalculation.oper\n    };\n    const saveCalculation = await axios.post(baseUrl + \"/addCalculation\", calculation);\n    return saveCalculation;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const updateCalculation = async (calculation) => {\n  try {\n    const calculationUpdate = {\n      num1: calculation.num1,\n      num2: calculation.num2,\n      oper: calculation.oper\n    };\n    const updateCalculation = await axios.put(`${baseUrl}/updateCalculation/${calculation.id}`, calculationUpdate);\n    return updateCalculation;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const deleteCalculationById = async (id) => {\n  try {\n    const deletedCalculation = await axios.delete(`${baseUrl}/deleteCalculation/${id}`);\n    return deletedCalculation;\n  } catch (error) {\n    throw new Error(error);\n  }\n}; // export const deleteAllPromotions = async (): Promise<\n//   AxiosResponse<ApiDataType>\n// > => {\n//   try {\n//     const deletedPromotion: AxiosResponse<ApiDataType> = await axios.delete(\n//       `${baseUrl}/deleteAllPromotions`\n//     );\n//     return deletedPromotion;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };","map":{"version":3,"sources":["C:/Users/לנובו/source/repos/CalculatorApp/app/src/actions/promotionApiActions.ts"],"names":["axios","baseUrl","getCalcList","calculations","get","error","Error","getCalculationById","_id","calculation","addCalculation","newCalculation","num1","num2","oper","saveCalculation","post","updateCalculation","calculationUpdate","put","id","deleteCalculationById","deletedCalculation","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,wBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAiD;AAC1E,MAAI;AACF,UAAMC,YAAwC,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrDH,OAAO,GAAI,aAD0C,CAAvD;AAGA,WAAOE,YAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CATM;AAWN,OAAO,MAAME,kBAAkB,GAAG,OACjCC,GADiC,KAEO;AACxC,MAAI;AACF,UAAMC,WAAuC,GAAG,MAAMT,KAAK,CAACI,GAAN,CACpDH,OAAO,GAAI,uBAAsBO,GAAI,EADe,CAAtD;AAGA,WAAOC,WAAP;AACD,GALD,CAKE,OAAOJ,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAXO;AAaR,OAAO,MAAMK,cAAc,GAAG,OAC5BC,cAD4B,KAEY;AACxC,MAAI;AACF,UAAMF,WAAsC,GAAG;AAC7CG,MAAAA,IAAI,EAAED,cAAc,CAACC,IADwB;AAE7CC,MAAAA,IAAI,EAAEF,cAAc,CAACE,IAFwB;AAG7CC,MAAAA,IAAI,EAAEH,cAAc,CAACG;AAHwB,KAA/C;AAKA,UAAMC,eAA2C,GAAG,MAAMf,KAAK,CAACgB,IAAN,CACxDf,OAAO,GAAG,iBAD8C,EAExDQ,WAFwD,CAA1D;AAIA,WAAOM,eAAP;AACD,GAXD,CAWE,OAAOV,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAjBM;AAmBN,OAAO,MAAMY,iBAAiB,GAAG,OAChCR,WADgC,KAEQ;AACxC,MAAI;AACF,UAAMS,iBAA0C,GAAG;AACjDN,MAAAA,IAAI,EAAEH,WAAW,CAACG,IAD+B;AAEjDC,MAAAA,IAAI,EAAEJ,WAAW,CAACI,IAF+B;AAGjDC,MAAAA,IAAI,EAAEL,WAAW,CAACK;AAH+B,KAAnD;AAKA,UAAMG,iBAA6C,GAAG,MAAMjB,KAAK,CAACmB,GAAN,CACzD,GAAElB,OAAQ,sBAAqBQ,WAAW,CAACW,EAAG,EADW,EAE1DF,iBAF0D,CAA5D;AAIA,WAAOD,iBAAP;AACD,GAXD,CAWE,OAAOZ,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAjBO;AAmBR,OAAO,MAAMgB,qBAAqB,GAAG,OACnCD,EADmC,KAEK;AACxC,MAAI;AACF,UAAME,kBAA8C,GAAG,MAAMtB,KAAK,CAACuB,MAAN,CAC1D,GAAEtB,OAAQ,sBAAqBmB,EAAG,EADwB,CAA7D;AAGA,WAAOE,kBAAP;AACD,GALD,CAKE,OAAOjB,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAXM,C,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\n\nconst baseUrl: string = \"http://localhost:44306\";\n\nexport const getCalcList = async (): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const calculations: AxiosResponse<ApiDataType> = await axios.get(\n      baseUrl + `getCalcList`\n    );\n    return calculations;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n export const getCalculationById = async (\n  _id: string\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const calculation: AxiosResponse<ApiDataType> = await axios.get(\n      baseUrl + `/getCalculationById/${_id}`\n    );\n    return calculation;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const addCalculation = async (\n  newCalculation: ICalculation\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const calculation: Omit<ICalculation, \"_id\"> = {\n      num1: newCalculation.num1,\n      num2: newCalculation.num2,\n      oper: newCalculation.oper\n    };\n    const saveCalculation: AxiosResponse<ApiDataType> = await axios.post(\n      baseUrl + \"/addCalculation\",\n      calculation\n    );\n    return saveCalculation;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n export const updateCalculation = async (\n  calculation: ICalculation\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const calculationUpdate: Pick<ICalculation, any> = {\n      num1: calculation.num1,\n      num2: calculation.num2,\n      oper: calculation.oper\n    };\n    const updateCalculation: AxiosResponse<ApiDataType> = await axios.put(\n      `${baseUrl}/updateCalculation/${calculation.id}`,\n      calculationUpdate\n    );\n    return updateCalculation;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const deleteCalculationById = async (\n  id: string[]\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const deletedCalculation: AxiosResponse<ApiDataType> = await axios.delete(\n      `${baseUrl}/deleteCalculation/${id}`\n    );\n    return deletedCalculation;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// export const deleteAllPromotions = async (): Promise<\n//   AxiosResponse<ApiDataType>\n// > => {\n//   try {\n//     const deletedPromotion: AxiosResponse<ApiDataType> = await axios.delete(\n//       `${baseUrl}/deleteAllPromotions`\n//     );\n//     return deletedPromotion;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}