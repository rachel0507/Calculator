{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DC\\u05E0\\u05D5\\u05D1\\u05D5\\\\source\\\\repos\\\\CalculatorApp\\\\app\\\\src\\\\components\\\\calculationList\\\\calculationList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer, useEffect } from \"react\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport Paper from \"@material-ui/core/Paper\"; // import {\n//   Column,\n//   DataTypeProvider,\n//   RowDetailState,\n//   SelectionState,\n//   VirtualTableState,\n// } from \"@devexpress/dx-react-grid\";\n// import {\n//   Grid,\n//   VirtualTable,\n//   TableHeaderRow,\n//   TableSelection,\n// } from \"@devexpress/dx-react-grid-material-ui\";\n\nimport axios from \"axios\";\nimport reducer from \"../../actions/promotionReducer\";\nimport { deleteCalculationById, getCalculationById } from \"../../actions/promotionApiActions\"; //import \"./promotionTable.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"https://localhost:44306\";\n\nconst getRowId = row => row.id;\n\nconst buildQueryString = (skip, take) => `${URL}/GetCalcList`;\n\nconst initialState = {\n  rows: [],\n  loading: false\n};\nexport default function CalculationList() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [selection, setSelection] = useState([]);\n  const [openEditModal, setOpenEditModal] = useState(false);\n  const [editPromotion, setEditCalculation] = useState();\n\n  const getRemoteRows = (requestedSkip, take) => {\n    dispatch({\n      type: \"START_LOADING\",\n      payload: {\n        requestedSkip,\n        take\n      }\n    });\n  };\n\n  const handleCalculationEdit = calculationId => {\n    getCalculationById(calculationId).then(response => {\n      let editCalculation = response.data.calculation;\n      setEditCalculation(editCalculation);\n      setOpenEditModal(true);\n    });\n  };\n\n  const handleCalculationDelete = calculationId => {\n    deleteCalculationById(calculationId).then(() => {\n      setSelection([]);\n      const updatedRows = rows.filter(function (row) {\n        return row._id !== calculationId;\n      });\n      dispatch({\n        type: \"UPDATE_ROWS\",\n        payload: {\n          rows: updatedRows\n        }\n      });\n    }).catch(() => dispatch({\n      type: \"REQUEST_ERROR\"\n    }));\n  }; // const handlePromotionDuplicate = (promotionId: string) => {\n  //   let duplicatePromotion = _.find(rows, { _id: promotionId });\n  //   addCalc(duplicatePromotion)\n  //     .then((response) => {\n  //       setSelection([]);\n  //       const newPromotion = response.data.promotion;\n  //       const updatedRows = [...rows];\n  //       updatedRows.unshift(newPromotion);\n  //       dispatch({\n  //         type: \"UPDATE_ROWS\",\n  //         payload: {\n  //           rows: updatedRows,\n  //         },\n  //       });\n  //     }) \n  //     .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\n  // };\n\n\n  const loadData = () => {\n    const {\n      requestedSkip,\n      take,\n      lastQuery,\n      loading\n    } = state;\n    const query = buildQueryString(requestedSkip, take);\n\n    if (query !== lastQuery && !loading) {\n      dispatch({\n        type: \"FETCH_INIT\"\n      });\n      axios.get(query).then(response => {\n        dispatch({\n          type: \"UPDATE_ROWS\",\n          payload: {\n            skip: requestedSkip,\n            rows: response.data //.promotions             \n\n          }\n        });\n      }).catch(() => dispatch({\n        type: \"REQUEST_ERROR\"\n      }));\n      dispatch({\n        type: \"UPDATE_QUERY\",\n        payload: query\n      });\n    }\n  };\n\n  useEffect(() => loadData());\n  const {\n    rows\n  } = state;\n  const columns = [{\n    field: 'calculation',\n    headerName: 'Calculations',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: params => {\n      debugger;\n      return `${params.getValue('num1')} ${params.getValue('oper')} ${params.getValue('num2')} ${params.getValue('result')}`;\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: \"calculationList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calculations History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 5,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CalculationList, \"4g97zfD9EKEgCT1XJpRXUr/dwVo=\");\n\n_c = CalculationList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculationList\");","map":{"version":3,"sources":["C:/Users/לנובו/source/repos/CalculatorApp/app/src/components/calculationList/calculationList.tsx"],"names":["React","useState","useReducer","useEffect","DataGrid","Paper","axios","reducer","deleteCalculationById","getCalculationById","URL","getRowId","row","id","buildQueryString","skip","take","initialState","rows","loading","CalculationList","state","dispatch","selection","setSelection","openEditModal","setOpenEditModal","editPromotion","setEditCalculation","getRemoteRows","requestedSkip","type","payload","handleCalculationEdit","calculationId","then","response","editCalculation","data","calculation","handleCalculationDelete","updatedRows","filter","_id","catch","loadData","lastQuery","query","get","columns","field","headerName","description","sortable","width","valueGetter","params","getValue","height"],"mappings":"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","sourcesContent":["import React, { useState, useReducer, useEffect } from \"react\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Paper from \"@material-ui/core/Paper\";\r\n// import {\r\n//   Column,\r\n//   DataTypeProvider,\r\n//   RowDetailState,\r\n//   SelectionState,\r\n//   VirtualTableState,\r\n// } from \"@devexpress/dx-react-grid\";\r\n// import {\r\n//   Grid,\r\n//   VirtualTable,\r\n//   TableHeaderRow,\r\n//   TableSelection,\r\n// } from \"@devexpress/dx-react-grid-material-ui\";\r\nimport axios from \"axios\";\r\nimport reducer from \"../../actions/promotionReducer\";\r\n\r\nimport { MenuItem, Select } from \"@material-ui/core\";\r\nimport {\r\n  addCalculation,\r\n  deleteCalculationById,\r\n  updateCalculation,\r\n  getCalculationById,\r\n} from \"../../actions/promotionApiActions\";\r\n//import \"./promotionTable.css\";\r\n\r\nconst URL = \"https://localhost:44306\"; \r\n\r\nconst getRowId = (row: any) => row.id;\r\nconst buildQueryString = (skip: any, take: any) =>\r\n  `${URL}/GetCalcList`;\r\n\r\nconst initialState = {\r\n  rows: [],\r\n  loading: false\r\n};\r\n\r\nexport default function CalculationList() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [selection, setSelection] = useState<any | null>([]);\r\n\r\n  const [openEditModal, setOpenEditModal] = useState(false);\r\n  const [editPromotion, setEditCalculation] = useState<any | null>();\r\n\r\n  const getRemoteRows = (requestedSkip: number, take: number) => {\r\n    dispatch({ type: \"START_LOADING\", payload: { requestedSkip, take } });\r\n  };\r\n\r\n  const handleCalculationEdit = (calculationId: string) => {\r\n    getCalculationById(calculationId).then((response) => {\r\n      let editCalculation: ICalculation | undefined = response.data.calculation;\r\n      setEditCalculation(editCalculation);\r\n      setOpenEditModal(true);\r\n    });\r\n  };\r\n\r\n  const handleCalculationDelete = (calculationId: string) => {\r\n    deleteCalculationById(calculationId)\r\n      .then(() => {\r\n        setSelection([]);\r\n        const updatedRows = rows.filter(function (row: any) {\r\n          return row._id !== calculationId;\r\n        });\r\n        dispatch({\r\n          type: \"UPDATE_ROWS\",\r\n          payload: {\r\n            rows: updatedRows,\r\n          },\r\n        });\r\n      })\r\n      .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n  };\r\n\r\n  // const handlePromotionDuplicate = (promotionId: string) => {\r\n  //   let duplicatePromotion = _.find(rows, { _id: promotionId });\r\n  //   addCalc(duplicatePromotion)\r\n  //     .then((response) => {\r\n  //       setSelection([]);\r\n  //       const newPromotion = response.data.promotion;\r\n  //       const updatedRows = [...rows];\r\n  //       updatedRows.unshift(newPromotion);\r\n  //       dispatch({\r\n  //         type: \"UPDATE_ROWS\",\r\n  //         payload: {\r\n  //           rows: updatedRows,\r\n  //         },\r\n  //       });\r\n  //     }) \r\n  //     .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n  // };\r\n\r\n\r\n  const loadData = () => {\r\n    const { requestedSkip, take, lastQuery, loading } = state;\r\n    const query = buildQueryString(requestedSkip, take);\r\n    if (query !== lastQuery && !loading) {\r\n      dispatch({ type: \"FETCH_INIT\" });\r\n      axios\r\n        .get(query)\r\n        .then((response) => {          \r\n          dispatch({\r\n            type: \"UPDATE_ROWS\",\r\n            payload: {\r\n              skip: requestedSkip,\r\n              rows: response.data//.promotions             \r\n            },\r\n          });\r\n        })\r\n        .catch(() => dispatch({ type: \"REQUEST_ERROR\" }));\r\n      dispatch({ type: \"UPDATE_QUERY\", payload: query });\r\n    }\r\n  };\r\n\r\n  useEffect(() => loadData());\r\n  const { rows } = state;\r\n\r\n  \r\n  \r\n  const columns = [\r\n    \r\n   {\r\n      field: 'calculation',\r\n      headerName: 'Calculations',\r\n      description: 'This column has a value getter and is not sortable.',\r\n      sortable: false,\r\n      width: 160,\r\n      valueGetter: (params: any) =>{\r\n      debugger;\r\n       return `${params.getValue('num1')} ${params.getValue('oper')} ${params.getValue('num2')} ${params.getValue('result')}`;\r\n   }\r\n  },\r\n  ];\r\n  \r\n  \r\n\r\n\r\n  return (\r\n    <Paper className=\"calculationList\">\r\n      <h1>Calculations History</h1>\r\n      <div style={{ height: 400, width: '100%' }}>\r\n        <DataGrid rows={rows} columns={columns} pageSize={5} checkboxSelection />\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}