{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"http://localhost:44306\";\nexport const getCalcList = async () => {\n  try {\n    const calculations = await axios.get(baseUrl + `getCalcList`);\n    return calculations;\n  } catch (error) {\n    throw new Error(error);\n  }\n}; // export const getPromotionById = async (\n//   _id: string\n// ): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const promotion: AxiosResponse<ApiDataType> = await axios.get(\n//       baseUrl + `/getPromotionById/${_id}`\n//     );\n//     return promotion;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n\nexport const addCalculation = async (newCalculation) => {\n  try {\n    const calculation = {\n      num1: newCalculation.num1,\n      num2: newCalculation.num2,\n      oper: newCalculation.oper\n    };\n    const saveCalculation = await axios.post(baseUrl + \"/addCalculation\", calculation);\n    return saveCalculation;\n  } catch (error) {\n    throw new Error(error);\n  }\n}; // export const updatePromotion = async (\n//   promotion: IPromotion\n// ): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const promotionUpdate: Pick<IPromotion, any> = {\n//       promotionName: promotion.promotionName,\n//       promotionType: promotion.promotionType,\n//       promotionStartDate: promotion.promotionStartDate,\n//       promotionEndDate: promotion.promotionEndDate,\n//       userGroupName: promotion.userGroupName,\n//     };\n//     const updatedPromotion: AxiosResponse<ApiDataType> = await axios.put(\n//       `${baseUrl}/updatePromotion/${promotion._id}`,\n//       promotionUpdate\n//     );\n//     return updatedPromotion;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n\nexport const deleteCalculationById = async (_id) => {\n  try {\n    const deletedCalculation = await axios.delete(`${baseUrl}/deleteCalculation/${_id}`);\n    return deletedCalculation;\n  } catch (error) {\n    throw new Error(error);\n  }\n}; // export const deleteAllPromotions = async (): Promise<\n//   AxiosResponse<ApiDataType>\n// > => {\n//   try {\n//     const deletedPromotion: AxiosResponse<ApiDataType> = await axios.delete(\n//       `${baseUrl}/deleteAllPromotions`\n//     );\n//     return deletedPromotion;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };","map":{"version":3,"sources":["C:/Users/לנובו/source/repos/CalculatorApp/app/src/actions/promotionApiActions.ts"],"names":["axios","baseUrl","getCalcList","calculations","get","error","Error","addCalculation","newCalculation","calculation","num1","num2","oper","saveCalculation","post","deleteCalculationById","_id","deletedCalculation","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,wBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAiD;AAC1E,MAAI;AACF,UAAMC,YAAwC,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrDH,OAAO,GAAI,aAD0C,CAAvD;AAGA,WAAOE,YAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CATM,C,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,cAAc,GAAG,OAC5BC,cAD4B,KAEY;AACxC,MAAI;AACF,UAAMC,WAAsC,GAAG;AAC7CC,MAAAA,IAAI,EAAEF,cAAc,CAACE,IADwB;AAE7CC,MAAAA,IAAI,EAAEH,cAAc,CAACG,IAFwB;AAG7CC,MAAAA,IAAI,EAAEJ,cAAc,CAACI;AAHwB,KAA/C;AAKA,UAAMC,eAA2C,GAAG,MAAMb,KAAK,CAACc,IAAN,CACxDb,OAAO,GAAG,iBAD8C,EAExDQ,WAFwD,CAA1D;AAIA,WAAOI,eAAP;AACD,GAXD,CAWE,OAAOR,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAjBM,C,CAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMU,qBAAqB,GAAG,OACnCC,GADmC,KAEK;AACxC,MAAI;AACF,UAAMC,kBAA8C,GAAG,MAAMjB,KAAK,CAACkB,MAAN,CAC1D,GAAEjB,OAAQ,sBAAqBe,GAAI,EADuB,CAA7D;AAGA,WAAOC,kBAAP;AACD,GALD,CAKE,OAAOZ,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAXM,C,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\n\nconst baseUrl: string = \"http://localhost:44306\";\n\nexport const getCalcList = async (): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const calculations: AxiosResponse<ApiDataType> = await axios.get(\n      baseUrl + `getCalcList`\n    );\n    return calculations;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// export const getPromotionById = async (\n//   _id: string\n// ): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const promotion: AxiosResponse<ApiDataType> = await axios.get(\n//       baseUrl + `/getPromotionById/${_id}`\n//     );\n//     return promotion;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n\nexport const addCalculation = async (\n  newCalculation: ICalculation\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const calculation: Omit<ICalculation, \"_id\"> = {\n      num1: newCalculation.num1,\n      num2: newCalculation.num2,\n      oper: newCalculation.oper\n    };\n    const saveCalculation: AxiosResponse<ApiDataType> = await axios.post(\n      baseUrl + \"/addCalculation\",\n      calculation\n    );\n    return saveCalculation;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// export const updatePromotion = async (\n//   promotion: IPromotion\n// ): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const promotionUpdate: Pick<IPromotion, any> = {\n//       promotionName: promotion.promotionName,\n//       promotionType: promotion.promotionType,\n//       promotionStartDate: promotion.promotionStartDate,\n//       promotionEndDate: promotion.promotionEndDate,\n//       userGroupName: promotion.userGroupName,\n//     };\n//     const updatedPromotion: AxiosResponse<ApiDataType> = await axios.put(\n//       `${baseUrl}/updatePromotion/${promotion._id}`,\n//       promotionUpdate\n//     );\n//     return updatedPromotion;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n\nexport const deleteCalculationById = async (\n  _id: string\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const deletedCalculation: AxiosResponse<ApiDataType> = await axios.delete(\n      `${baseUrl}/deleteCalculation/${_id}`\n    );\n    return deletedCalculation;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// export const deleteAllPromotions = async (): Promise<\n//   AxiosResponse<ApiDataType>\n// > => {\n//   try {\n//     const deletedPromotion: AxiosResponse<ApiDataType> = await axios.delete(\n//       `${baseUrl}/deleteAllPromotions`\n//     );\n//     return deletedPromotion;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}